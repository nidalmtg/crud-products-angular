var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.533,1,0.935]],["body/components/AppComponent.html",[0,0.924,1,1.699,2,2.029,3,0.513,4,0.441,5,1.798,6,1.798,7,1.798,8,1.798,9,0.441,10,3.037,11,1.798,12,4.655,13,4.655,14,2.806,15,2.516,16,3.272,17,2.262,18,5.094,19,2.262,20,4.655,21,0.671,22,0.844,23,5.094,24,0.671,25,0.041,26,1.176,27,1.176,28,1.176,29,2.862,30,0.95,31,3.7,32,0.671,33,3.7,34,0.671,35,0.513,36,0.373,37,1.798,38,2.262,39,2.262,40,1.798,41,2.33,42,1.798,43,1.195,44,1.798,45,1.176,46,1.612,47,1.17,48,2.262,49,1.176,50,1.612,51,1.058,52,1.798,53,1.176,54,1.798,55,1.058,56,1.612,57,1.798,58,1.798,59,0.032,60,0.032]],["title/modules/AppModule.html",[61,1.809,62,1.809]],["body/modules/AppModule.html",[1,1.878,3,0.498,4,0.428,9,0.428,15,1.564,25,0.042,32,1.051,34,0.651,35,0.498,36,0.362,47,0.824,59,0.031,60,0.031,62,3.649,63,1.564,64,2.219,65,2.945,66,2.945,67,2.945,68,2.945,69,3.038,70,2.711,71,3.038,72,2.807,73,2.206,74,1.954,75,3.588,76,3.21,77,2.807,78,3.53,79,2.807,80,4.566,81,3.21,82,2.206,83,4.566,84,3.588,85,4.566,86,1.406,87,3.748,88,2.206,89,2.522,90,3.588,91,3.588,92,2.945,93,1.744,94,3.588,95,2.522]],["title/modules/AppRoutingModule.html",[61,1.809,69,1.602]],["body/modules/AppRoutingModule.html",[0,0.886,3,0.556,4,0.478,9,0.478,25,0.042,32,1.022,34,0.726,35,0.556,36,0.404,47,0.92,51,1.398,55,1.398,59,0.033,60,0.033,63,1.745,69,2.662,77,2.462,79,3.006,93,1.946,96,4.004,97,4.004,98,3.245,99,4.889,100,2.18,101,3.287,102,4.004,103,2.18,104,4.889,105,4.004,106,3.287,107,1.946,108,4.332,109,4.004,110,4.013,111,4.004,112,4.004,113,2.18,114,3.287,115,4.004,116,2.814]],["title/guards/AuthGuardService.html",[103,1.602,117,2.068]],["body/guards/AuthGuardService.html",[3,0.542,4,0.466,9,0.466,21,0.708,22,0.708,24,0.708,25,0.041,30,1.236,32,0.946,34,0.708,35,0.542,36,0.394,43,1.003,59,0.033,60,0.033,100,2.126,103,2.622,114,4.679,118,3.905,119,4.285,120,3.206,121,3.209,122,3.669,123,4.101,124,1.53,125,1.241,126,3.206,127,1.923,128,3.905,129,1.241,130,1.241,131,3.905,132,1.241,133,2.96,134,2.098,135,3.206,136,1.53,137,3.206,138,3.905,139,2.745,140,3.905,141,3.905,142,1.887,143,3.206,144,1.898]],["title/modules/AuthenticationModule.html",[61,1.809,70,1.43]],["body/modules/AuthenticationModule.html",[3,0.485,4,0.417,9,0.417,25,0.042,32,1.067,34,0.634,35,0.485,36,0.353,51,1.683,59,0.031,60,0.031,63,1.523,64,2.182,70,2.844,72,2.761,73,2.149,74,1.903,76,3.156,77,2.149,79,2.761,86,1.37,95,3.156,103,2.445,106,2.87,116,3.156,122,2.457,127,1.956,135,2.87,144,1.699,145,2.87,146,2.87,147,2.87,148,2.87,149,3.017,150,3.496,151,3.686,152,2.457,153,3.686,154,1.523,155,4.49,156,2.457,157,2.457,158,3.496,159,3.686,160,2.87,161,2.87,162,3.686,163,2.87,164,3.686,165,2.87,166,3.686,167,2.87,168,3.496,169,3.496,170,3.496]],["title/components/CreateProductPopupComponent.html",[0,0.533,45,0.935]],["body/components/CreateProductPopupComponent.html",[0,0.613,1,0.558,2,1.196,3,0.244,4,0.21,5,0.854,6,0.854,7,0.854,8,0.854,9,0.403,11,0.854,14,2.308,15,2.07,17,1.334,19,1.334,21,0.319,22,0.498,24,0.996,25,0.042,26,0.873,27,0.558,28,1.074,29,1.688,30,1.282,32,0.797,34,0.319,35,0.244,36,0.177,37,0.854,38,1.334,39,1.334,40,0.854,41,1.665,42,0.854,43,1.064,44,0.854,45,1.214,46,2.07,47,1.346,48,1.334,49,0.558,50,0.766,51,0.502,52,0.854,53,0.558,54,0.854,55,0.502,56,0.766,57,0.854,58,0.854,59,0.019,60,0.019,86,0.689,107,2.014,124,0.873,125,0.558,129,1.074,130,1.074,132,1.214,136,1.076,154,0.766,171,1.994,172,4.176,173,3.576,174,1.235,175,1.84,176,2.254,177,2.774,178,2.254,179,2.392,180,3.136,181,2.375,182,3.136,183,2.08,184,2.254,185,3.136,186,2.254,187,2.078,188,2.078,189,1.235,190,2.701,191,1.642,192,1.856,193,2.254,194,1.442,195,1.193,196,1.757,197,1.757,198,1.665,199,1.676,200,2.254,201,2.135,202,2.814,203,1.495,204,2.254,205,1.334,206,1.93,207,1.722,208,2.392,209,1.688,210,1.076,211,1.495,212,1.856,213,2.254,214,1.688,215,2.254,216,1.196,217,1.495,218,2.392,219,2.745,220,2.254,221,1.914,222,1.757,223,2.254,224,1.757,225,1.93,226,1.762,227,2.685,228,2.254,229,2.349,230,2.254,231,2.08,232,1.665,233,1.688,234,1.334,235,2.254,236,2.254,237,2.254,238,1.861,239,3.136,240,1.93,241,2.254,242,1.757,243,2.135,244,2.254,245,1.757,246,1.688,247,1.688,248,1.688,249,1.757,250,2.774,251,0.957,252,1.235,253,1.442,254,1.08,255,0.854,256,1.442,257,1.497,258,1.442,259,1.235,260,1.235,261,1.442,262,1.442,263,1.442,264,1.442,265,1.442,266,1.442,267,1.235,268,1.235,269,1.235,270,1.442,271,1.442,272,1.442,273,1.757,274,1.442,275,1.442,276,1.442,277,1.334,278,1.442,279,2.774,280,1.442,281,1.442,282,1.235,283,1.235,284,1.235,285,1.235,286,1.235,287,1.235,288,1.442,289,3.82,290,1.93,291,1.856,292,2.254,293,2.685,294,2.254,295,2.92,296,3.899,297,2.254,298,2.254,299,1.93,300,3.136,301,2.745,302,2.254,303,2.745,304,2.745,305,2.745,306,2.745,307,2.745,308,2.745,309,2.745]],["title/components/EditProductPopupComponent.html",[0,0.533,49,0.935]],["body/components/EditProductPopupComponent.html",[0,0.583,1,0.517,2,1.126,3,0.226,4,0.194,5,0.791,6,0.791,7,0.791,8,0.791,9,0.437,11,0.791,14,2.247,15,2.015,17,1.256,19,1.256,21,0.295,22,0.469,24,0.966,25,0.042,26,1.27,27,0.517,28,1.022,30,1.301,32,0.808,34,0.295,35,0.226,36,0.164,37,0.791,38,1.256,39,1.256,40,0.791,41,1.596,42,0.791,43,1.187,44,0.791,45,0.517,46,0.709,47,1.356,48,1.256,49,1.164,50,2.015,51,0.465,52,0.791,53,0.517,54,0.791,55,0.465,56,0.709,57,0.791,58,0.791,59,0.018,60,0.018,81,1.144,82,1.001,86,0.638,107,2.166,124,0.822,125,0.822,129,1.164,130,1.164,132,1.27,133,1.001,136,1.013,154,0.709,171,2.017,174,1.144,175,1.751,176,2.122,177,2.639,178,2.122,179,2.315,180,3.006,181,2.26,183,1.994,184,2.122,185,3.006,186,2.122,187,1.977,188,1.977,189,1.144,190,2.614,191,1.562,192,1.779,193,1.336,194,1.336,195,1.135,198,1.853,199,1.84,201,1.256,202,2.518,203,1.407,204,2.122,205,1.256,206,1.817,207,1.666,208,2.518,209,1.589,210,1.013,211,1.407,212,1.779,213,2.122,214,2.614,215,2.122,216,1.126,217,1.407,218,2.315,220,2.122,221,1.942,223,2.122,225,2.574,226,1.723,227,2.574,228,2.122,229,2.251,230,2.122,231,2.315,232,1.126,233,1.589,234,1.256,235,2.122,236,2.122,237,2.122,238,1.747,239,3.006,240,1.817,241,2.122,243,1.779,244,2.122,246,1.589,247,1.589,248,1.589,250,3.006,251,0.886,252,1.144,253,1.336,255,1.256,256,1.336,257,1.565,258,1.336,259,1.817,260,1.144,261,1.336,262,1.336,263,1.336,264,1.336,265,2.122,266,1.336,267,1.144,268,1.144,269,1.144,270,1.336,271,1.336,272,1.336,274,1.336,275,1.336,276,1.336,277,1.562,278,1.336,279,2.639,280,1.336,281,1.336,282,1.817,283,1.817,284,1.817,285,1.817,286,1.817,287,1.817,288,2.122,291,2.066,292,2.122,293,2.574,294,2.122,295,2.844,296,3.797,297,2.122,298,2.122,299,1.817,300,2.122,310,4.224,311,3.617,312,3.006,313,2.585,314,2.585,315,1.627,316,1.627,317,1.627,318,1.994,319,2.585,320,2.585,321,1.627,322,2.122,323,1.589,324,2.122,325,2.122,326,1.627,327,1.627,328,1.627,329,3.797,330,1.627,331,1.627,332,1.144,333,1.336,334,1.627,335,1.627,336,1.627,337,1.627,338,1.627,339,1.627,340,1.627,341,3.215,342,1.627,343,1.627,344,1.627,345,1.627,346,1.627,347,2.122]],["title/classes/FileHandler.html",[36,0.297,179,1.602]],["body/classes/FileHandler.html",[3,0.348,4,0.299,9,0.599,21,0.454,22,0.649,24,0.827,25,0.042,26,0.796,27,0.796,28,0.796,30,1.288,32,0.649,35,0.348,36,0.253,41,1.56,43,0.919,59,0.024,60,0.024,86,0.982,107,2.031,113,1.95,124,1.138,125,0.796,129,1.138,130,1.138,132,1.328,142,0.982,179,1.95,191,2.216,192,2.216,198,1.56,199,1.864,201,2.438,203,1.95,205,1.74,207,1.403,209,2.202,210,1.403,211,1.95,212,1.74,216,2.186,217,2.732,218,1.95,221,1.56,226,1.609,227,3.205,229,2.202,232,1.987,234,2.216,238,1.403,240,2.517,243,2.031,254,1.54,257,0.982,277,1.217,291,1.74,302,2.056,318,1.95,323,2.804,348,1.761,349,4.24,350,2.056,351,3.085,352,2.939,353,2.939,354,2.517,355,3.581,356,3.581,357,3.581,358,5.017,359,3.581,360,4.824,361,2.938,362,4.56,363,4.56,364,4.56,365,1.761,366,3.581,367,2.505,368,2.517,369,2.517,370,2.939,371,2.505,372,2.483,373,4.56,374,3.581,375,3.581,376,3.581,377,3.581,378,3.581,379,4.56,380,3.581,381,2.939,382,3.581,383,2.505,384,3.581,385,3.581,386,3.581,387,3.581,388,3.581,389,5.165,390,2.505,391,2.939,392,2.939,393,2.939,394,2.517,395,3.581,396,3.581,397,3.581,398,3.581,399,2.938,400,1.54,401,2.505,402,2.505,403,3.581,404,2.505,405,3.581,406,2.505,407,2.505,408,2.505,409,3.581,410,2.505,411,2.505,412,2.056,413,2.056,414,2.056,415,2.056,416,1.761,417,2.505,418,2.056,419,2.505,420,2.505,421,1.761,422,2.505]],["title/components/LoginComponent.html",[0,0.533,51,0.841]],["body/components/LoginComponent.html",[0,0.675,1,0.652,2,1.347,3,0.285,4,0.245,5,0.997,6,0.997,7,0.997,8,0.997,9,0.245,11,0.997,14,2.425,15,2.175,17,1.502,19,1.502,21,0.372,22,0.561,24,0.806,25,0.042,27,0.652,28,0.652,29,1.901,30,1.357,32,0.751,34,0.372,35,0.285,36,0.207,37,0.997,38,1.502,39,1.502,40,0.997,41,1.805,42,0.997,43,0.955,44,0.997,45,0.652,46,0.894,47,0.855,48,1.502,49,0.652,50,0.894,51,1.185,52,0.997,53,0.652,54,0.997,55,0.586,56,0.894,57,0.997,58,0.997,59,0.021,60,0.021,100,1.117,110,2.538,121,3.14,123,3.124,124,0.983,125,0.983,127,1.837,129,0.652,130,0.652,132,1.317,136,1.212,139,1.442,142,1.623,144,1.502,154,0.894,175,2.026,183,2.256,189,1.442,190,3.14,198,2.036,199,1.89,201,2.27,207,1.623,208,2.256,209,2.873,210,1.212,212,1.502,216,1.347,218,1.683,221,1.347,226,1.649,232,1.805,246,1.261,257,0.804,291,2.013,295,2.547,329,2.538,333,1.684,351,2.873,372,2.544,381,3.401,423,1.684,424,3.721,425,3.091,426,4.444,427,4.444,428,3.721,429,4.672,430,4.672,431,4.142,432,1.901,433,3.721,434,2.051,435,2.051,436,3.401,437,4.142,438,2.616,439,4.142,440,4.142,441,3.835,442,4.142,443,3.401,444,4.142,445,4.142,446,4.672,447,4.672,448,3.091,449,3.091,450,3.091,451,3.091,452,2.051,453,2.616,454,3.721,455,2.051,456,4.142,457,3.091,458,2.538,459,2.538,460,2.538,461,3.091,462,3.091,463,3.091,464,3.091,465,2.051,466,2.051,467,2.051,468,2.051,469,2.051,470,3.721,471,2.051,472,2.051,473,2.051,474,2.051,475,2.051,476,2.051,477,2.051,478,2.051,479,2.051,480,2.051,481,2.051,482,2.051,483,2.051,484,2.051,485,2.051,486,2.051,487,2.051,488,2.051,489,2.051,490,2.051,491,2.051,492,2.051,493,3.091,494,3.091,495,3.091,496,3.091,497,3.091,498,3.091,499,3.091,500,2.051]],["title/injectables/LoginService.html",[127,1.038,134,1.282]],["body/injectables/LoginService.html",[3,0.371,4,0.319,9,0.319,16,1.877,21,0.484,22,0.679,24,0.896,25,0.042,26,0.849,27,1.191,28,1.191,30,1.351,32,0.851,34,0.484,35,0.371,36,0.269,43,0.962,59,0.026,60,0.026,86,1.047,100,1.454,107,1.298,113,2.04,123,3.698,124,1.191,125,0.849,127,1.322,129,1.191,130,1.191,132,1.376,133,1.642,134,1.633,142,1.696,156,2.634,191,1.821,192,2.28,198,2.233,199,1.951,205,2.28,207,2.008,210,1.468,216,1.633,221,1.164,226,1.895,229,2.304,231,2.04,234,1.821,238,1.047,252,1.877,254,1.642,255,1.298,257,1.468,268,3.042,269,2.634,277,1.298,351,3.15,361,3.042,365,1.877,368,2.634,369,2.634,372,2.79,394,3.298,421,1.877,432,2.304,436,3.076,438,2.634,453,2.634,459,3.076,460,3.076,501,1.877,502,2.192,503,4.692,504,4.692,505,4.328,506,3.747,507,4.328,508,2.67,509,2.67,510,2.634,511,3.852,512,3.747,513,4.206,514,3.852,515,3.747,516,3.747,517,2.67,518,3.747,519,3.235,520,2.67,521,3.747,522,3.747,523,3.747,524,2.634,525,3.747,526,3.747,527,3.076,528,3.747,529,3.747,530,2.304,531,3.747,532,3.747,533,3.747,534,2.67,535,3.747,536,2.67,537,3.747,538,2.67,539,2.67,540,2.67,541,2.192,542,3.747,543,2.67,544,2.67,545,2.67,546,2.67,547,2.67,548,2.67,549,2.67,550,2.67]],["title/components/NavbarComponent.html",[0,0.533,53,0.935]],["body/components/NavbarComponent.html",[0,0.786,1,0.851,2,1.636,3,0.372,4,0.319,5,1.301,6,1.301,7,1.301,8,1.301,9,0.319,11,1.301,14,2.611,15,2.342,17,1.824,19,1.824,21,0.486,22,0.681,24,0.852,25,0.042,26,1.193,27,0.851,28,0.851,30,1.38,32,0.852,34,0.486,35,0.372,36,0.27,37,1.301,38,1.824,39,1.824,40,1.301,41,2.047,42,1.301,43,1.113,44,1.301,45,0.851,46,1.167,47,1.079,48,1.824,49,0.851,50,1.167,51,0.766,52,1.301,53,1.493,54,1.301,55,0.766,56,1.167,57,1.301,58,1.301,59,0.026,60,0.026,121,2.665,124,1.193,125,1.193,127,1.896,129,0.851,130,0.851,132,1.193,133,2.308,136,1.471,142,1.471,144,1.824,171,2.14,175,2.36,183,2.558,187,2.665,195,1.896,198,1.636,199,1.658,202,2.044,208,2.044,216,1.636,221,1.889,226,1.325,232,1.636,251,1.458,255,2.492,290,2.639,332,1.882,415,3.082,432,2.308,524,2.639,551,2.198,552,3.754,553,4.335,554,3.754,555,4.335,556,4.335,557,4.698,558,2.678,559,4.335,560,3.558,561,3.857,562,3.754,563,3.754,564,2.678,565,3.754,566,3.082,567,3.082,568,2.678,569,3.754,570,2.678,571,2.678,572,3.558,573,2.198,574,3.754,575,3.082,576,2.678,577,2.678,578,2.678,579,2.678,580,2.198,581,1.882,582,2.678,583,2.678,584,3.754,585,2.678,586,2.678,587,2.198,588,2.198,589,2.678,590,3.082,591,3.754]],["title/interfaces/Product.html",[47,0.676,592,1.809]],["body/interfaces/Product.html",[3,0.563,4,0.484,9,0.484,21,0.735,22,0.893,24,1.079,25,0.041,26,1.925,35,0.563,47,1.132,59,0.034,60,0.034,171,1.589,238,2.163,243,2.683,247,3.394,248,3.394,592,2.493,593,4.055,594,3.329,595,3.394,596,5.307]],["title/components/ProductListComponent.html",[0,0.533,55,0.841]],["body/components/ProductListComponent.html",[0,0.47,1,0.379,2,0.874,3,0.166,4,0.142,5,0.58,6,0.58,7,0.58,8,0.58,9,0.142,11,0.58,14,1.99,15,1.785,17,0.974,19,0.974,21,0.216,22,0.364,24,0.972,25,0.042,26,1.645,27,1.077,28,1.24,29,0.734,30,1.359,32,0.707,34,0.216,35,0.166,36,0.12,37,0.58,38,0.974,39,0.974,40,0.58,41,1.325,42,0.58,43,1.189,44,0.58,45,0.379,46,0.52,47,1.178,48,0.974,49,0.379,50,1.13,51,0.341,52,0.58,53,0.379,54,0.58,55,0.869,56,1.13,57,0.58,58,0.58,59,0.014,60,0.014,93,2.59,107,0.58,113,1.412,124,0.637,125,0.637,129,1.302,130,1.302,132,1.472,136,0.786,139,1.41,142,0.468,144,1.647,154,0.52,171,2.089,175,1.412,181,1.823,183,1.655,187,1.595,188,1.595,190,2.399,195,1.445,199,1.975,202,2.883,203,1.092,205,1.477,207,1.669,208,1.655,210,2.061,212,0.974,214,1.869,218,2.62,221,2.13,226,1.749,231,1.999,232,1.599,233,1.233,234,2.251,238,1.529,243,1.477,246,1.233,247,1.233,248,1.233,251,0.65,255,1.26,257,1.016,277,1.26,282,0.839,283,0.839,284,0.839,285,0.839,286,0.839,287,0.839,291,1.784,295,1.233,299,1.41,318,1.092,322,3.613,324,1.646,325,1.646,332,0.839,347,1.646,354,1.41,372,2.23,412,0.98,413,0.98,414,2.782,416,1.41,418,0.98,432,1.233,443,0.98,510,2.382,524,1.41,527,3.362,530,1.233,560,2.129,561,2.495,566,3.013,567,1.646,572,2.782,573,1.646,575,2.782,581,0.839,587,0.98,588,2.782,595,2.706,597,0.98,598,2.593,599,2.005,600,3.389,601,2.593,602,2.593,603,3.389,604,2.593,605,2.593,606,2.495,607,2.005,608,2.005,609,2.495,610,2.495,611,2.005,612,2.005,613,3.039,614,3.039,615,3.67,616,1.193,617,1.193,618,2.005,619,1.646,620,1.193,621,3.613,622,2.005,623,3.039,624,2.005,625,2.005,626,3.67,627,2.005,628,2.593,629,2.005,630,2.005,631,1.193,632,3.039,633,2.005,634,2.005,635,3.039,636,3.013,637,3.013,638,2.005,639,1.193,640,2.005,641,1.193,642,3.039,643,3.013,644,3.362,645,2.005,646,2.005,647,1.193,648,1.646,649,2.005,650,2.005,651,1.193,652,1.646,653,2.005,654,2.005,655,1.193,656,2.005,657,1.193,658,1.41,659,2.005,660,1.193,661,3.039,662,2.005,663,1.646,664,3.039,665,1.193,666,2.005,667,2.005,668,1.646,669,1.646,670,2.593,671,1.193,672,2.005,673,3.039,674,1.193,675,2.495,676,1.193,677,1.193,678,1.193,679,1.193,680,1.193,681,2.005,682,1.193,683,2.005,684,1.193,685,1.193,686,1.193,687,2.005,688,1.193,689,1.193,690,1.193,691,1.193,692,0.98,693,0.98,694,1.193,695,2.005,696,1.193,697,1.193,698,1.193,699,1.193,700,2.593,701,1.193,702,1.193,703,1.193,704,1.193,705,2.005,706,1.193,707,2.005,708,1.193,709,1.193,710,1.193,711,1.193,712,1.193,713,1.193,714,2.005,715,2.005,716,1.193,717,1.193,718,1.193,719,1.193,720,1.193,721,3.389,722,2.005,723,1.193,724,1.193,725,1.193,726,1.193,727,1.193,728,1.193,729,1.193,730,1.193,731,1.646,732,2.005,733,2.005,734,1.646,735,2.005,736,2.005,737,1.646,738,2.005,739,2.005,740,2.005,741,2.005,742,1.646,743,2.005]],["title/modules/ProductListModule.html",[61,1.809,71,1.602]],["body/modules/ProductListModule.html",[3,0.411,4,0.353,9,0.353,25,0.042,32,1.075,34,0.537,35,0.411,36,0.299,45,1.825,46,1.291,47,1.215,49,1.825,50,1.291,53,1.825,55,1.642,56,1.291,59,0.027,60,0.027,63,1.291,64,1.956,70,2.57,71,3.236,72,2.474,73,1.821,74,1.613,76,2.829,77,2.474,78,2.082,79,2.474,87,3.304,88,1.821,89,2.082,92,2.431,93,1.439,95,2.829,101,2.431,116,2.829,151,3.304,152,2.082,153,3.304,154,1.291,159,3.304,160,2.431,161,2.431,162,3.304,163,2.431,164,3.304,165,2.431,166,3.304,167,2.431,171,1.161,173,2.082,195,1.867,251,1.613,311,2.082,581,2.082,692,2.431,693,2.431,744,2.431,745,2.431,746,2.962,747,2.431,748,2.431,749,2.962,750,4.024,751,2.962,752,4.024,753,4.024,754,4.024,755,2.962,756,4.024,757,2.962,758,4.024]],["title/injectables/ProductListService.html",[134,1.282,195,1.038]],["body/injectables/ProductListService.html",[3,0.209,4,0.179,9,0.179,16,1.057,21,0.273,22,0.44,24,1.005,25,0.042,26,1.722,27,0.771,28,0.771,30,1.223,32,0.635,34,0.273,35,0.209,36,0.152,43,1.223,47,0.557,59,0.017,60,0.017,86,0.589,93,2.367,113,1.906,124,0.771,125,0.478,129,1.373,130,1.373,132,1.373,134,1.057,142,1.867,171,1.909,182,1.992,191,2.545,192,1.701,195,0.856,199,2.052,200,1.992,201,2.184,202,2.949,203,1.321,205,2.412,206,2.46,207,1.761,210,2.172,211,2.949,214,1.492,216,2.23,217,2.786,225,3.489,226,1.848,231,1.906,232,1.958,238,1.761,243,1.179,254,0.925,255,1.995,259,2.886,260,2.886,267,3.597,277,2.315,290,1.706,291,1.179,312,1.992,318,1.906,323,3.146,353,2.873,354,1.706,361,2.144,365,1.057,368,2.46,369,2.46,370,1.992,391,1.992,392,1.992,399,3.546,400,0.925,416,2.46,421,1.057,441,1.992,458,2.873,501,1.057,510,2.46,530,1.492,541,1.235,595,3.252,606,1.992,609,1.992,610,2.873,619,1.992,636,3.37,637,3.911,643,2.873,644,2.873,648,2.504,663,1.992,668,4.2,669,1.992,675,3.809,737,1.992,742,1.992,759,1.235,760,3.05,761,2.426,762,2.426,763,2.426,764,2.426,765,3.37,766,1.504,767,4.963,768,4.764,769,3.5,770,3.5,771,3.5,772,3.5,773,3.5,774,1.504,775,2.426,776,1.504,777,2.426,778,2.426,779,2.426,780,1.504,781,2.426,782,1.992,783,3.05,784,2.426,785,1.504,786,2.426,787,1.504,788,2.426,789,2.426,790,2.426,791,3.5,792,2.426,793,2.426,794,2.426,795,2.426,796,2.426,797,2.426,798,2.426,799,2.426,800,2.426,801,2.426,802,2.426,803,1.504,804,1.504,805,2.426,806,3.05,807,3.5,808,1.504,809,3.05,810,2.426,811,1.504,812,1.504,813,1.504,814,1.504]],["title/interceptors/TokenInterceptor.html",[149,1.602,157,2.068]],["body/interceptors/TokenInterceptor.html",[3,0.428,4,0.368,9,0.368,21,0.559,22,0.75,24,0.846,25,0.041,30,1.197,32,0.904,34,0.559,35,0.428,36,0.311,43,1.061,59,0.028,60,0.028,86,1.208,121,2.542,122,3.504,124,1.314,125,0.98,126,2.53,127,1.835,129,1.314,130,1.314,132,0.98,134,1.801,136,1.208,137,2.53,142,1.208,149,2.251,156,2.906,188,2.542,191,2.009,192,2.009,198,2.172,199,1.759,201,2.009,207,1.953,210,1.62,211,2.714,212,2.009,217,2.251,226,1.889,234,2.009,238,1.208,318,2.251,323,2.542,351,3.065,352,3.393,372,2.251,393,3.393,394,3.504,399,3.279,400,1.895,511,3.393,513,3.393,514,3.393,530,2.542,580,2.53,621,3.393,658,2.906,782,3.393,815,3.082,816,4.092,817,2.53,818,4.134,819,4.984,820,4.134,821,4.134,822,4.134,823,4.134,824,3.082,825,4.134,826,4.984,827,4.664,828,4.984,829,3.082,830,4.134,831,4.134,832,4.134,833,4.134,834,4.134,835,4.134,836,3.082,837,3.082,838,4.134,839,3.082,840,3.082,841,3.082,842,3.082,843,3.082,844,3.082]],["title/classes/User.html",[36,0.297,519,1.809]],["body/classes/User.html",[3,0.599,4,0.515,9,0.515,21,0.782,22,0.927,24,0.988,25,0.04,26,1.854,30,1.399,35,0.599,36,0.435,59,0.035,60,0.035,348,3.032,438,3.83,453,3.83,519,3.143,595,3.35,845,3.54,846,4.313,847,4.313,848,4.313]],["title/coverage.html",[849,3.288]],["body/coverage.html",[0,1.012,1,1.14,9,0.428,10,2.945,24,0.651,25,0.041,36,0.46,45,1.14,47,1.254,49,1.14,51,1.026,53,1.14,55,1.026,59,0.031,60,0.031,93,2.219,103,1.954,117,2.522,119,2.945,120,2.945,127,1.266,134,1.99,149,1.954,157,2.522,171,2.187,172,2.945,173,2.522,174,3.21,179,1.954,195,1.266,233,3.25,257,1.406,293,4.034,310,2.945,311,2.522,349,2.945,350,2.945,423,2.945,502,2.945,519,2.206,551,2.945,592,2.206,594,2.945,597,2.945,734,2.945,759,2.945,816,2.945,817,2.945,845,2.945,849,2.945,850,3.588,851,3.588,852,3.588,853,3.588,854,3.588,855,3.588,856,3.588,857,4.566,858,3.588,859,3.588,860,3.588,861,3.588,862,3.588,863,3.588,864,3.588,865,3.588,866,3.588,867,3.588,868,3.588,869,3.588,870,3.588,871,3.588,872,3.588,873,2.945,874,3.748,875,5.286,876,2.945,877,3.748,878,2.945,879,2.945,880,3.588,881,3.588]],["title/dependencies.html",[64,1.718,882,1.73]],["body/dependencies.html",[25,0.042,34,0.723,59,0.033,60,0.033,64,1.938,78,3.428,81,3.428,82,2.998,88,2.451,89,2.803,100,2.171,108,3.273,152,2.803,154,1.738,400,2.451,883,3.987,884,5.856,885,3.987,886,3.987,887,3.987,888,3.987,889,3.987,890,3.987,891,3.987,892,3.987,893,4.003,894,3.987,895,4.876,896,3.987,897,3.987,898,3.987,899,3.987,900,3.987,901,3.987,902,3.987,903,3.987,904,3.987,905,3.987,906,3.987,907,3.987,908,3.273,909,3.987,910,3.987,911,3.987,912,3.987,913,3.987,914,3.987]],["title/index.html",[21,0.446,915,2.461,916,2.461]],["body/index.html",[0,0.934,4,0.452,25,0.032,43,0.973,59,0.032,60,0.032,74,2.063,88,3.528,136,1.485,257,1.485,590,3.11,652,3.11,658,3.321,882,2.663,908,3.11,917,3.788,918,4.725,919,3.788,920,5.149,921,5.149,922,3.11,923,3.788,924,3.788,925,4.725,926,5.547,927,3.788,928,3.788,929,3.788,930,3.788,931,3.788,932,3.788,933,3.788,934,3.788,935,3.788,936,5.149,937,5.149,938,3.788,939,5.391,940,3.788,941,3.788,942,3.788,943,3.788,944,4.725,945,4.725,946,5.391,947,3.788,948,4.725,949,3.788,950,5.657,951,3.788,952,3.788,953,3.788,954,4.725,955,3.788,956,3.788,957,3.788,958,3.788,959,3.788,960,5.149,961,3.788,962,3.788,963,3.788,964,2.663,965,3.788,966,3.788]],["title/modules.html",[63,1.746]],["body/modules.html",[25,0.036,59,0.036,60,0.036,62,2.784,63,1.974,69,2.466,70,2.201,71,2.466,82,3.419,893,4.565,967,5.561,968,5.724,969,4.528,970,4.528]],["title/overview.html",[964,2.816]],["body/overview.html",[1,1.789,2,1.515,25,0.041,45,1.789,49,1.789,51,1.609,53,1.789,55,1.609,59,0.03,60,0.03,62,3.596,63,1.515,64,2.174,65,2.854,66,2.854,67,2.854,68,2.854,69,2.694,70,2.842,71,3.278,72,2.751,73,2.138,74,1.893,98,2.138,117,2.444,127,1.746,145,2.854,146,2.854,147,2.854,148,2.854,149,2.694,195,1.746,348,2.444,501,2.444,592,2.138,731,3.673,744,2.854,745,2.854,747,2.854,748,2.854,964,2.444,971,3.476,972,3.476,973,4.474,974,3.476]],["title/properties.html",[22,0.641,882,1.73]],["body/properties.html",[22,0.854,25,0.038,59,0.037,60,0.037,922,3.865,975,4.708]],["title/routes.html",[98,2.463]],["body/routes.html",[25,0.037,59,0.037,60,0.037,98,2.916]],["title/miscellaneous/variables.html",[976,2.02,977,2.903]],["body/miscellaneous/variables.html",[21,0.77,24,1.016,25,0.041,27,1.72,28,1.72,59,0.034,60,0.034,143,3.485,144,2.461,765,4.158,873,3.485,874,4.602,876,3.485,877,3.485,878,4.158,879,4.158,976,3.485,977,3.485,978,5.065,979,4.245,980,4.245,981,4.245,982,4.245,983,4.245,984,5.065]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthenticationModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":293,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":975,"title":{},"body":{"properties.html":{}}}],["0.0.1",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["0.12.7",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":731,"title":{},"body":{"components/ProductListComponent.html":{},"overview.html":{}}}],["1/7",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":141,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["1000",{"_index":489,"title":{},"body":{"components/LoginComponent.html":{}}}],["12.1.2",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["128",{"_index":294,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["13.3.0",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["13.3.6",{"_index":923,"title":{},"body":{"index.html":{}}}],["13.3.7",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":973,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["2/11",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":974,"title":{},"body":{"overview.html":{}}}],["3.6.0",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["3/11",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["3/13",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":971,"title":{},"body":{"overview.html":{}}}],["4.18.1",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["4/7",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["5.1.3",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["512",{"_index":298,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["57",{"_index":734,"title":{},"body":{"components/ProductListComponent.html":{},"coverage.html":{}}}],["6",{"_index":972,"title":{},"body":{"overview.html":{}}}],["6.1.1",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["63",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["7.5.0",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["7/11",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["750",{"_index":707,"title":{},"body":{"components/ProductListComponent.html":{}}}],["9/21",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["9])(?=.*[!@#$%^&*])(?=.{8",{"_index":481,"title":{},"body":{"components/LoginComponent.html":{}}}],["_",{"_index":407,"title":{},"body":{"classes/FileHandler.html":{}}}],["_loginservice",{"_index":563,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_productlistservice",{"_index":559,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_service",{"_index":618,"title":{},"body":{"components/ProductListComponent.html":{}}}],["accessors",{"_index":432,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["actions",{"_index":673,"title":{},"body":{"components/ProductListComponent.html":{}}}],["actual_component",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["actuel",{"_index":309,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["add",{"_index":590,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["affiche",{"_index":623,"title":{},"body":{"components/ProductListComponent.html":{}}}],["afficher",{"_index":325,"title":{},"body":{"components/EditProductPopupComponent.html":{},"components/ProductListComponent.html":{}}}],["afin",{"_index":323,"title":{},"body":{"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["afjn",{"_index":788,"title":{},"body":{"injectables/ProductListService.html":{}}}],["ajoutant",{"_index":375,"title":{},"body":{"classes/FileHandler.html":{}}}],["ajouter",{"_index":289,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["ajoutez",{"_index":304,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["alert",{"_index":624,"title":{},"body":{"components/ProductListComponent.html":{}}}],["alert('le",{"_index":730,"title":{},"body":{"components/ProductListComponent.html":{}}}],["alert(this.selectedproduct.libelle",{"_index":713,"title":{},"body":{"components/ProductListComponent.html":{}}}],["alors",{"_index":792,"title":{},"body":{"injectables/ProductListService.html":{}}}],["angular",{"_index":920,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":152,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"injectables/LoginService.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["angular/compiler",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthenticationModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":154,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":167,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{}}}],["angular/material/dialog",{"_index":581,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{}}}],["angular/material/form",{"_index":160,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{}}}],["angular/material/grid",{"_index":755,"title":{},"body":{"modules/ProductListModule.html":{}}}],["angular/material/icon",{"_index":163,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{}}}],["angular/material/input",{"_index":165,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{}}}],["angular/material/paginator",{"_index":693,"title":{},"body":{"components/ProductListComponent.html":{},"modules/ProductListModule.html":{}}}],["angular/material/select",{"_index":757,"title":{},"body":{"modules/ProductListModule.html":{}}}],["angular/material/table",{"_index":692,"title":{},"body":{"components/ProductListComponent.html":{},"modules/ProductListModule.html":{}}}],["angular/platform",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"components/EditProductPopupComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":100,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"dependencies.html":{}}}],["annuler",{"_index":300,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["app.component",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":930,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":535,"title":{},"body":{"injectables/LoginService.html":{}}}],["application/x",{"_index":270,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["appmodule",{"_index":62,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":69,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":940,"title":{},"body":{"index.html":{}}}],["assez",{"_index":450,"title":{},"body":{"components/LoginComponent.html":{}}}],["async",{"_index":505,"title":{},"body":{"injectables/LoginService.html":{}}}],["asynchrone",{"_index":521,"title":{},"body":{"injectables/LoginService.html":{}}}],["au",{"_index":303,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["auth",{"_index":122,"title":{},"body":{"guards/AuthGuardService.html":{},"modules/AuthenticationModule.html":{},"interceptors/TokenInterceptor.html":{}}}],["authentication/auth",{"_index":105,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authentication/authentication.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductListModule.html":{}}}],["authentication/login/login.component",{"_index":102,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authentication/login/login.service",{"_index":580,"title":{},"body":{"components/NavbarComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["authenticationmodule",{"_index":70,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{},"modules.html":{},"overview.html":{}}}],["authguard",{"_index":104,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authguardservice",{"_index":103,"title":{"guards/AuthGuardService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["authorization",{"_index":841,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["authtoken",{"_index":542,"title":{},"body":{"injectables/LoginService.html":{}}}],["automatically",{"_index":931,"title":{},"body":{"index.html":{}}}],["automatiquement",{"_index":820,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["aux",{"_index":381,"title":{},"body":{"classes/FileHandler.html":{},"components/LoginComponent.html":{}}}],["available",{"_index":970,"title":{},"body":{"modules.html":{}}}],["avant",{"_index":821,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["avec",{"_index":416,"title":{},"body":{"classes/FileHandler.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["ayant",{"_index":395,"title":{},"body":{"classes/FileHandler.html":{}}}],["base",{"_index":636,"title":{},"body":{"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["bearer",{"_index":842,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["blob",{"_index":783,"title":{},"body":{"injectables/ProductListService.html":{}}}],["body",{"_index":259,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"injectables/ProductListService.html":{}}}],["body.set('image",{"_index":265,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["body.set(key",{"_index":263,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["body.tostring",{"_index":810,"title":{},"body":{"injectables/ProductListService.html":{}}}],["boolean",{"_index":133,"title":{},"body":{"guards/AuthGuardService.html":{},"components/EditProductPopupComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{}}}],["bootstrap",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductListModule.html":{},"dependencies.html":{}}}],["bootstrap/ng",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductListModule.html":{},"dependencies.html":{}}}],["box",{"_index":625,"title":{},"body":{"components/ProductListComponent.html":{}}}],["browse",{"_index":968,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"components/EditProductPopupComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":939,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{}}}],["capabilities",{"_index":958,"title":{},"body":{"index.html":{}}}],["caractéristique",{"_index":741,"title":{},"body":{"components/ProductListComponent.html":{}}}],["cas",{"_index":633,"title":{},"body":{"components/ProductListComponent.html":{}}}],["catalogue",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/ProductListComponent.html":{}}}],["cette",{"_index":351,"title":{},"body":{"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interceptors/TokenInterceptor.html":{}}}],["champs",{"_index":295,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/ProductListComponent.html":{}}}],["change",{"_index":652,"title":{},"body":{"components/ProductListComponent.html":{},"index.html":{}}}],["chaque",{"_index":831,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["charg",{"_index":228,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["check",{"_index":963,"title":{},"body":{"index.html":{}}}],["choice",{"_index":953,"title":{},"body":{"index.html":{}}}],["class",{"_index":36,"title":{"classes/FileHandler.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthenticationModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"coverage.html":{}}}],["classe",{"_index":352,"title":{},"body":{"classes/FileHandler.html":{},"interceptors/TokenInterceptor.html":{}}}],["classes",{"_index":348,"title":{},"body":{"classes/FileHandler.html":{},"classes/User.html":{},"overview.html":{}}}],["cli",{"_index":921,"title":{},"body":{"index.html":{}}}],["client",{"_index":394,"title":{},"body":{"classes/FileHandler.html":{},"injectables/LoginService.html":{},"interceptors/TokenInterceptor.html":{}}}],["close",{"_index":494,"title":{},"body":{"components/LoginComponent.html":{}}}],["cluster_appmodule",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule",{"_index":145,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_declarations",{"_index":146,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_exports",{"_index":147,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_providers",{"_index":148,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_productlistmodule",{"_index":744,"title":{},"body":{"modules/ProductListModule.html":{},"overview.html":{}}}],["cluster_productlistmodule_declarations",{"_index":748,"title":{},"body":{"modules/ProductListModule.html":{},"overview.html":{}}}],["cluster_productlistmodule_exports",{"_index":747,"title":{},"body":{"modules/ProductListModule.html":{},"overview.html":{}}}],["cluster_productlistmodule_imports",{"_index":746,"title":{},"body":{"modules/ProductListModule.html":{}}}],["cluster_productlistmodule_providers",{"_index":745,"title":{},"body":{"modules/ProductListModule.html":{},"overview.html":{}}}],["code",{"_index":934,"title":{},"body":{"index.html":{}}}],["collections",{"_index":732,"title":{},"body":{"components/ProductListComponent.html":{}}}],["command",{"_index":954,"title":{},"body":{"index.html":{}}}],["comme",{"_index":396,"title":{},"body":{"classes/FileHandler.html":{}}}],["commonmodule",{"_index":151,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"overview.html":{}}}],["compte",{"_index":796,"title":{},"body":{"injectables/ProductListService.html":{}}}],["concernant",{"_index":356,"title":{},"body":{"classes/FileHandler.html":{}}}],["confirm('êtes",{"_index":708,"title":{},"body":{"components/ProductListComponent.html":{}}}],["confirmation",{"_index":414,"title":{},"body":{"classes/FileHandler.html":{},"components/ProductListComponent.html":{}}}],["confirmer",{"_index":627,"title":{},"body":{"components/ProductListComponent.html":{}}}],["conflits",{"_index":378,"title":{},"body":{"classes/FileHandler.html":{}}}],["connecter",{"_index":456,"title":{},"body":{"components/LoginComponent.html":{}}}],["connexion",{"_index":499,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('connect",{"_index":485,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('file",{"_index":419,"title":{},"body":{"classes/FileHandler.html":{}}}],["console.log('mauvais",{"_index":487,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(data",{"_index":276,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["const",{"_index":107,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"injectables/LoginService.html":{},"components/ProductListComponent.html":{}}}],["constructor",{"_index":125,"title":{},"body":{"guards/AuthGuardService.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor(_loginservice",{"_index":558,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(_service",{"_index":616,"title":{},"body":{"components/ProductListComponent.html":{}}}],["constructor(auth",{"_index":126,"title":{},"body":{"guards/AuthGuardService.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor(formbuilder",{"_index":189,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(http",{"_index":365,"title":{},"body":{"classes/FileHandler.html":{},"injectables/LoginService.html":{},"injectables/ProductListService.html":{}}}],["constructor(private",{"_index":254,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"classes/FileHandler.html":{},"injectables/LoginService.html":{},"injectables/ProductListService.html":{}}}],["constructor(public",{"_index":137,"title":{},"body":{"guards/AuthGuardService.html":{},"interceptors/TokenInterceptor.html":{}}}],["contenu",{"_index":653,"title":{},"body":{"components/ProductListComponent.html":{}}}],["context",{"_index":878,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contient",{"_index":353,"title":{},"body":{"classes/FileHandler.html":{},"injectables/ProductListService.html":{}}}],["core",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["correctement",{"_index":714,"title":{},"body":{"components/ProductListComponent.html":{}}}],["correspond",{"_index":440,"title":{},"body":{"components/LoginComponent.html":{}}}],["coverage",{"_index":849,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{}}}],["createproduct",{"_index":182,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"injectables/ProductListService.html":{}}}],["createproduct(body",{"_index":764,"title":{},"body":{"injectables/ProductListService.html":{}}}],["createproductpopup",{"_index":557,"title":{},"body":{"components/NavbarComponent.html":{}}}],["createproductpopupcomponent",{"_index":45,"title":{"components/CreateProductPopupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"coverage.html":{},"overview.html":{}}}],["création",{"_index":415,"title":{},"body":{"classes/FileHandler.html":{},"components/NavbarComponent.html":{}}}],["crédits",{"_index":523,"title":{},"body":{"injectables/LoginService.html":{}}}],["créer",{"_index":200,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"injectables/ProductListService.html":{}}}],["d'afficher",{"_index":235,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["d'en",{"_index":782,"title":{},"body":{"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["d'intercepter",{"_index":830,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["d'ouvrir",{"_index":565,"title":{},"body":{"components/NavbarComponent.html":{}}}],["d'un",{"_index":524,"title":{},"body":{"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["d'une",{"_index":768,"title":{},"body":{"injectables/ProductListService.html":{}}}],["d'utilisateur",{"_index":454,"title":{},"body":{"components/LoginComponent.html":{}}}],["d'y",{"_index":393,"title":{},"body":{"classes/FileHandler.html":{},"interceptors/TokenInterceptor.html":{}}}],["d'éviter",{"_index":377,"title":{},"body":{"classes/FileHandler.html":{}}}],["d\\'utilisateur",{"_index":500,"title":{},"body":{"components/LoginComponent.html":{}}}],["dans",{"_index":231,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"injectables/LoginService.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["data",{"_index":588,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["datasource",{"_index":600,"title":{},"body":{"components/ProductListComponent.html":{}}}],["date.now",{"_index":408,"title":{},"body":{"classes/FileHandler.html":{}}}],["de",{"_index":199,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["declarations",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{}}}],["decorators",{"_index":573,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["default",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{}}}],["delete",{"_index":737,"title":{},"body":{"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["deleteproduct",{"_index":606,"title":{},"body":{"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["deleteproduct(id",{"_index":619,"title":{},"body":{"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["deleteproductconfirm",{"_index":607,"title":{},"body":{"components/ProductListComponent.html":{}}}],["deleteproductconfirm(id",{"_index":630,"title":{},"body":{"components/ProductListComponent.html":{}}}],["dependencies",{"_index":64,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depuis",{"_index":229,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"injectables/LoginService.html":{}}}],["des",{"_index":354,"title":{},"body":{"classes/FileHandler.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["description",{"_index":238,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"injectables/LoginService.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["description.value?.length",{"_index":297,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["dev",{"_index":908,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["development",{"_index":924,"title":{},"body":{"index.html":{}}}],["devez",{"_index":444,"title":{},"body":{"components/LoginComponent.html":{}}}],["dialog",{"_index":560,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["dialogue",{"_index":567,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["directement",{"_index":634,"title":{},"body":{"components/ProductListComponent.html":{}}}],["directive",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["directives",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":938,"title":{},"body":{"index.html":{}}}],["directory",{"_index":943,"title":{},"body":{"index.html":{}}}],["displayedcolumns",{"_index":601,"title":{},"body":{"components/ProductListComponent.html":{}}}],["disponible",{"_index":308,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["dist",{"_index":942,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["dologout",{"_index":503,"title":{},"body":{"injectables/LoginService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["domsanitizer",{"_index":334,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["données",{"_index":637,"title":{},"body":{"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["du",{"_index":207,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["dynamic",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":285,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/ProductListComponent.html":{}}}],["e2e",{"_index":951,"title":{},"body":{"index.html":{}}}],["edit",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{}}}],["editproduct",{"_index":312,"title":{},"body":{"components/EditProductPopupComponent.html":{},"injectables/ProductListService.html":{}}}],["editproduct(id",{"_index":775,"title":{},"body":{"injectables/ProductListService.html":{}}}],["editproductpopup",{"_index":608,"title":{},"body":{"components/ProductListComponent.html":{}}}],["editproductpopup(id",{"_index":638,"title":{},"body":{"components/ProductListComponent.html":{}}}],["editproductpopupcomponent",{"_index":49,"title":{"components/EditProductPopupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"coverage.html":{},"overview.html":{}}}],["effectuée",{"_index":832,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["element",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["elementref",{"_index":331,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["en",{"_index":203,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["encapsulation",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["end",{"_index":950,"title":{},"body":{"index.html":{}}}],["entre",{"_index":380,"title":{},"body":{"classes/FileHandler.html":{}}}],["entrer",{"_index":445,"title":{},"body":{"components/LoginComponent.html":{}}}],["entrez",{"_index":495,"title":{},"body":{"components/LoginComponent.html":{}}}],["environment",{"_index":874,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envoie",{"_index":391,"title":{},"body":{"classes/FileHandler.html":{},"injectables/ProductListService.html":{}}}],["envoy",{"_index":240,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{}}}],["envoyer",{"_index":373,"title":{},"body":{"classes/FileHandler.html":{}}}],["envoyée",{"_index":215,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["erreur",{"_index":437,"title":{},"body":{"components/LoginComponent.html":{}}}],["est",{"_index":212,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"components/ProductListComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["et",{"_index":234,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"injectables/LoginService.html":{},"components/ProductListComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["event",{"_index":239,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["event.target.files",{"_index":281,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["event.target.files[0",{"_index":279,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["evnoie",{"_index":781,"title":{},"body":{"injectables/ProductListService.html":{}}}],["execute",{"_index":948,"title":{},"body":{"index.html":{}}}],["existant",{"_index":778,"title":{},"body":{"injectables/ProductListService.html":{}}}],["export",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthenticationModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{}}}],["exports",{"_index":116,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{}}}],["express",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":143,"title":{},"body":{"guards/AuthGuardService.html":{},"miscellaneous/variables.html":{}}}],["fenêtre",{"_index":566,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["fichier",{"_index":227,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{}}}],["fichiers",{"_index":358,"title":{},"body":{"classes/FileHandler.html":{}}}],["field",{"_index":161,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthenticationModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"coverage.html":{}}}],["fileext",{"_index":403,"title":{},"body":{"classes/FileHandler.html":{}}}],["filehandler",{"_index":179,"title":{"classes/FileHandler.html":{}},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"coverage.html":{}}}],["filehandler(this.http",{"_index":258,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["filehandler.uploadimage",{"_index":220,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["filename",{"_index":401,"title":{},"body":{"classes/FileHandler.html":{}}}],["filename.split('.').join('_",{"_index":406,"title":{},"body":{"classes/FileHandler.html":{}}}],["filereader",{"_index":283,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/ProductListComponent.html":{}}}],["files",{"_index":933,"title":{},"body":{"index.html":{}}}],["filter_list",{"_index":738,"title":{},"body":{"components/ProductListComponent.html":{}}}],["filterform",{"_index":602,"title":{},"body":{"components/ProductListComponent.html":{}}}],["filtre",{"_index":666,"title":{},"body":{"components/ProductListComponent.html":{}}}],["filtrer",{"_index":742,"title":{},"body":{"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["first",{"_index":956,"title":{},"body":{"index.html":{}}}],["fonction",{"_index":793,"title":{},"body":{"injectables/ProductListService.html":{}}}],["fontawesome",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":180,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["formbuilder",{"_index":190,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/ProductListComponent.html":{}}}],["formdata",{"_index":389,"title":{},"body":{"classes/FileHandler.html":{}}}],["formdata.append('file",{"_index":410,"title":{},"body":{"classes/FileHandler.html":{}}}],["forme",{"_index":397,"title":{},"body":{"classes/FileHandler.html":{}}}],["formgroup",{"_index":470,"title":{},"body":{"components/LoginComponent.html":{}}}],["formulaire",{"_index":208,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["fort",{"_index":451,"title":{},"body":{"components/LoginComponent.html":{}}}],["fortawesome/angular",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["frontend",{"_index":917,"title":{},"body":{"index.html":{}}}],["full",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":959,"title":{},"body":{"index.html":{}}}],["generate",{"_index":936,"title":{},"body":{"index.html":{}}}],["generated",{"_index":919,"title":{},"body":{"index.html":{}}}],["getimage",{"_index":761,"title":{},"body":{"injectables/ProductListService.html":{}}}],["getimage(name",{"_index":779,"title":{},"body":{"injectables/ProductListService.html":{}}}],["getisloggedin",{"_index":539,"title":{},"body":{"injectables/LoginService.html":{}}}],["getloginservice",{"_index":576,"title":{},"body":{"components/NavbarComponent.html":{}}}],["getpassworderrormessage",{"_index":429,"title":{},"body":{"components/LoginComponent.html":{}}}],["getpasswordinput",{"_index":472,"title":{},"body":{"components/LoginComponent.html":{}}}],["getproductbyid",{"_index":762,"title":{},"body":{"injectables/ProductListService.html":{}}}],["getproductbyid(id",{"_index":784,"title":{},"body":{"injectables/ProductListService.html":{}}}],["getproductlistservice",{"_index":578,"title":{},"body":{"components/NavbarComponent.html":{}}}],["getproducts",{"_index":609,"title":{},"body":{"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["getproducts(search",{"_index":786,"title":{},"body":{"injectables/ProductListService.html":{}}}],["getproducts(this.filterform.get('search').value",{"_index":718,"title":{},"body":{"components/ProductListComponent.html":{}}}],["getproducttypes",{"_index":610,"title":{},"body":{"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["getselectedproduct",{"_index":611,"title":{},"body":{"components/ProductListComponent.html":{}}}],["getselectedproduct(id",{"_index":650,"title":{},"body":{"components/ProductListComponent.html":{}}}],["getservice",{"_index":688,"title":{},"body":{"components/ProductListComponent.html":{}}}],["getting",{"_index":915,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":504,"title":{},"body":{"injectables/LoginService.html":{}}}],["getusernameerrormessage",{"_index":430,"title":{},"body":{"components/LoginComponent.html":{}}}],["go",{"_index":962,"title":{},"body":{"index.html":{}}}],["graph",{"_index":969,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":117,"title":{"guards/AuthGuardService.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":106,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{}}}],["guard.service.ts",{"_index":120,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:6",{"_index":128,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guard.service.ts:9",{"_index":131,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guards",{"_index":118,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["génér",{"_index":529,"title":{},"body":{"injectables/LoginService.html":{}}}],["handler",{"_index":253,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["handler.ts",{"_index":350,"title":{},"body":{"classes/FileHandler.html":{},"coverage.html":{}}}],["handler.ts:10",{"_index":366,"title":{},"body":{"classes/FileHandler.html":{}}}],["handler.ts:18",{"_index":371,"title":{},"body":{"classes/FileHandler.html":{}}}],["handler.ts:28",{"_index":383,"title":{},"body":{"classes/FileHandler.html":{}}}],["handler.ts:43",{"_index":390,"title":{},"body":{"classes/FileHandler.html":{}}}],["handler.ts:9",{"_index":367,"title":{},"body":{"classes/FileHandler.html":{}}}],["hasimage",{"_index":341,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["headers",{"_index":268,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"injectables/LoginService.html":{}}}],["help",{"_index":960,"title":{},"body":{"index.html":{}}}],["hide",{"_index":426,"title":{},"body":{"components/LoginComponent.html":{}}}],["html",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["http",{"_index":191,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"injectables/LoginService.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["http://localhost:4200",{"_index":929,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":155,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["httpclient",{"_index":192,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"injectables/LoginService.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpclientmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":837,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httphandler",{"_index":828,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httpheaders",{"_index":252,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"injectables/LoginService.html":{}}}],["httpheaders().set('content",{"_index":269,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"injectables/LoginService.html":{}}}],["httpinterceptor",{"_index":838,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httprequest",{"_index":826,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["https://crud",{"_index":368,"title":{},"body":{"classes/FileHandler.html":{},"injectables/LoginService.html":{},"injectables/ProductListService.html":{}}}],["icons",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":595,"title":{},"body":{"interfaces/Product.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"classes/User.html":{}}}],["identifiant",{"_index":488,"title":{},"body":{"components/LoginComponent.html":{}}}],["identifiants",{"_index":459,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["identifier",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["identiques",{"_index":382,"title":{},"body":{"classes/FileHandler.html":{}}}],["ignore",{"_index":717,"title":{},"body":{"components/ProductListComponent.html":{}}}],["il",{"_index":462,"title":{},"body":{"components/LoginComponent.html":{}}}],["image",{"_index":243,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["imagesrc",{"_index":181,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/ProductListComponent.html":{}}}],["img",{"_index":346,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["implements",{"_index":136,"title":{},"body":{"guards/AuthGuardService.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"interceptors/TokenInterceptor.html":{},"index.html":{}}}],["import",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthenticationModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["imports",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["indiquez",{"_index":306,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthenticationModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{}}}],["initialise",{"_index":642,"title":{},"body":{"components/ProductListComponent.html":{}}}],["initimage",{"_index":313,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["initimage(name",{"_index":320,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["injectable",{"_index":134,"title":{"injectables/LoginService.html":{},"injectables/ProductListService.html":{}},"body":{"guards/AuthGuardService.html":{},"injectables/LoginService.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":501,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProductListService.html":{},"overview.html":{}}}],["input",{"_index":250,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["inputs",{"_index":186,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["intercept",{"_index":823,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercept(request",{"_index":825,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercepteur",{"_index":818,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":157,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":817,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:12",{"_index":824,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interceptor.ts:13",{"_index":836,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interceptor.ts:20",{"_index":829,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interceptors",{"_index":815,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interface",{"_index":592,"title":{"interfaces/Product.html":{}},"body":{"interfaces/Product.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":593,"title":{},"body":{"interfaces/Product.html":{}}}],["islogged",{"_index":555,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isloggedin",{"_index":507,"title":{},"body":{"injectables/LoginService.html":{}}}],["jour",{"_index":667,"title":{},"body":{"components/ProductListComponent.html":{}}}],["jquery",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":949,"title":{},"body":{"index.html":{}}}],["key",{"_index":261,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["l'access",{"_index":528,"title":{},"body":{"injectables/LoginService.html":{}}}],["l'access_token",{"_index":511,"title":{},"body":{"injectables/LoginService.html":{},"interceptors/TokenInterceptor.html":{}}}],["l'accueil",{"_index":516,"title":{},"body":{"injectables/LoginService.html":{}}}],["l'afficher",{"_index":324,"title":{},"body":{"components/EditProductPopupComponent.html":{},"components/ProductListComponent.html":{}}}],["l'api",{"_index":217,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["l'entête",{"_index":833,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["l'envoi",{"_index":359,"title":{},"body":{"classes/FileHandler.html":{}}}],["l'envoie",{"_index":387,"title":{},"body":{"classes/FileHandler.html":{}}}],["l'envoyer",{"_index":822,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["l'image",{"_index":214,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["l'input",{"_index":230,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["l'objet",{"_index":769,"title":{},"body":{"injectables/ProductListService.html":{}}}],["l'utilisateur",{"_index":512,"title":{},"body":{"injectables/LoginService.html":{}}}],["l'utilisateurs",{"_index":533,"title":{},"body":{"injectables/LoginService.html":{}}}],["la",{"_index":210,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["le",{"_index":226,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["legend",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["les",{"_index":205,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"injectables/LoginService.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["libell",{"_index":800,"title":{},"body":{"injectables/ProductListService.html":{}}}],["libelle",{"_index":247,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{}}}],["libelle.value?.length",{"_index":292,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["list",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{}}}],["list.component",{"_index":101,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ProductListModule.html":{}}}],["list.component.css",{"_index":598,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.html",{"_index":599,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts",{"_index":597,"title":{},"body":{"components/ProductListComponent.html":{},"coverage.html":{}}}],["list.component.ts:109",{"_index":665,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:123",{"_index":660,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:134",{"_index":647,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:142",{"_index":641,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:153",{"_index":651,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:163",{"_index":620,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:18",{"_index":678,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:19",{"_index":679,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:20",{"_index":680,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:22",{"_index":682,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:23",{"_index":684,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:25",{"_index":674,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:34",{"_index":671,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:35",{"_index":686,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:39",{"_index":677,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:41",{"_index":676,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:44",{"_index":617,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:52",{"_index":655,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:57",{"_index":689,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:61",{"_index":691,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:69",{"_index":657,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:83",{"_index":639,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:94",{"_index":631,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["list.module.ts",{"_index":749,"title":{},"body":{"modules/ProductListModule.html":{}}}],["list.service",{"_index":251,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{}}}],["list.service.ts",{"_index":759,"title":{},"body":{"injectables/ProductListService.html":{},"coverage.html":{}}}],["list.service.ts:11",{"_index":804,"title":{},"body":{"injectables/ProductListService.html":{}}}],["list.service.ts:12",{"_index":763,"title":{},"body":{"injectables/ProductListService.html":{}}}],["list.service.ts:19",{"_index":803,"title":{},"body":{"injectables/ProductListService.html":{}}}],["list.service.ts:27",{"_index":785,"title":{},"body":{"injectables/ProductListService.html":{}}}],["list.service.ts:38",{"_index":787,"title":{},"body":{"injectables/ProductListService.html":{}}}],["list.service.ts:61",{"_index":766,"title":{},"body":{"injectables/ProductListService.html":{}}}],["list.service.ts:72",{"_index":776,"title":{},"body":{"injectables/ProductListService.html":{}}}],["list.service.ts:80",{"_index":774,"title":{},"body":{"injectables/ProductListService.html":{}}}],["list.service.ts:88",{"_index":780,"title":{},"body":{"injectables/ProductListService.html":{}}}],["list/create",{"_index":172,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"coverage.html":{}}}],["list/edit",{"_index":310,"title":{},"body":{"components/EditProductPopupComponent.html":{},"coverage.html":{}}}],["list/navbar/navbar.component.ts",{"_index":551,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["list/navbar/navbar.component.ts:12",{"_index":570,"title":{},"body":{"components/NavbarComponent.html":{}}}],["list/navbar/navbar.component.ts:13",{"_index":571,"title":{},"body":{"components/NavbarComponent.html":{}}}],["list/navbar/navbar.component.ts:15",{"_index":562,"title":{},"body":{"components/NavbarComponent.html":{}}}],["list/navbar/navbar.component.ts:23",{"_index":577,"title":{},"body":{"components/NavbarComponent.html":{}}}],["list/navbar/navbar.component.ts:27",{"_index":579,"title":{},"body":{"components/NavbarComponent.html":{}}}],["list/navbar/navbar.component.ts:31",{"_index":568,"title":{},"body":{"components/NavbarComponent.html":{}}}],["list/navbar/navbar.component.ts:43",{"_index":564,"title":{},"body":{"components/NavbarComponent.html":{}}}],["list/product",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"injectables/ProductListService.html":{},"coverage.html":{}}}],["list/product.ts",{"_index":594,"title":{},"body":{"interfaces/Product.html":{},"coverage.html":{}}}],["liste",{"_index":643,"title":{},"body":{"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["literal",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":513,"title":{},"body":{"injectables/LoginService.html":{},"interceptors/TokenInterceptor.html":{}}}],["localstorage.getitem('access_token",{"_index":548,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.removeitem('access_token",{"_index":549,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.setitem('access_token",{"_index":546,"title":{},"body":{"injectables/LoginService.html":{}}}],["login",{"_index":110,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["login.component.css",{"_index":424,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":425,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.service",{"_index":474,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":158,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["login/login.service",{"_index":135,"title":{},"body":{"guards/AuthGuardService.html":{},"modules/AuthenticationModule.html":{}}}],["logincomponent",{"_index":51,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginservice",{"_index":127,"title":{"injectables/LoginService.html":{}},"body":{"guards/AuthGuardService.html":{},"modules/AuthenticationModule.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["loginservice.signin",{"_index":464,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":431,"title":{},"body":{"components/LoginComponent.html":{}}}],["logoutdirections_run",{"_index":591,"title":{},"body":{"components/NavbarComponent.html":{}}}],["manipulation",{"_index":357,"title":{},"body":{"classes/FileHandler.html":{}}}],["marque",{"_index":740,"title":{},"body":{"components/ProductListComponent.html":{}}}],["matbuttonmodule",{"_index":166,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{}}}],["matching",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthenticationModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":561,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["matdialogmodule",{"_index":758,"title":{},"body":{"modules/ProductListModule.html":{}}}],["matformfieldmodule",{"_index":159,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{}}}],["matgridlistmodule",{"_index":754,"title":{},"body":{"modules/ProductListModule.html":{}}}],["maticonmodule",{"_index":162,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{}}}],["matinputmodule",{"_index":164,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{}}}],["matpaginator",{"_index":615,"title":{},"body":{"components/ProductListComponent.html":{}}}],["matpaginator(paginator",{"_index":696,"title":{},"body":{"components/ProductListComponent.html":{}}}],["matpaginatormodule",{"_index":753,"title":{},"body":{"modules/ProductListModule.html":{}}}],["matselectmodule",{"_index":756,"title":{},"body":{"modules/ProductListModule.html":{}}}],["mattabledatasource",{"_index":670,"title":{},"body":{"components/ProductListComponent.html":{}}}],["mattablemodule",{"_index":752,"title":{},"body":{"modules/ProductListModule.html":{}}}],["message",{"_index":413,"title":{},"body":{"classes/FileHandler.html":{},"components/ProductListComponent.html":{}}}],["met",{"_index":661,"title":{},"body":{"components/ProductListComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["methods",{"_index":124,"title":{},"body":{"guards/AuthGuardService.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["miscellaneous",{"_index":976,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modifi",{"_index":770,"title":{},"body":{"injectables/ProductListService.html":{}}}],["modification",{"_index":640,"title":{},"body":{"components/ProductListComponent.html":{}}}],["modifier",{"_index":318,"title":{},"body":{"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["module",{"_index":61,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{}},"body":{}}],["modules",{"_index":63,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":961,"title":{},"body":{"index.html":{}}}],["mot",{"_index":446,"title":{},"body":{"components/LoginComponent.html":{}}}],["multi",{"_index":170,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["méthode",{"_index":372,"title":{},"body":{"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ProductListComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["méthodes",{"_index":355,"title":{},"body":{"classes/FileHandler.html":{}}}],["n'est",{"_index":449,"title":{},"body":{"components/LoginComponent.html":{}}}],["n'y",{"_index":790,"title":{},"body":{"injectables/ProductListService.html":{}}}],["name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{},"index.html":{}}}],["navbar",{"_index":552,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["navbar.component.css",{"_index":553,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":554,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":751,"title":{},"body":{"modules/ProductListModule.html":{}}}],["navbarcomponent",{"_index":53,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":928,"title":{},"body":{"index.html":{}}}],["ne",{"_index":439,"title":{},"body":{"components/LoginComponent.html":{}}}],["need",{"_index":955,"title":{},"body":{"index.html":{}}}],["new",{"_index":257,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ProductListComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":827,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["next.handle(request",{"_index":844,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["ng",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductListModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductListModule.html":{}}}],["ngmodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{}}}],["ngoninit",{"_index":183,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["nidal.herokuapp.com/auth/signin",{"_index":537,"title":{},"body":{"injectables/LoginService.html":{}}}],["nidal.herokuapp.com/products",{"_index":370,"title":{},"body":{"classes/FileHandler.html":{},"injectables/ProductListService.html":{}}}],["nidal.herokuapp.com/products/img",{"_index":805,"title":{},"body":{"injectables/ProductListService.html":{}}}],["nodejs",{"_index":369,"title":{},"body":{"classes/FileHandler.html":{},"injectables/LoginService.html":{},"injectables/ProductListService.html":{}}}],["nom",{"_index":291,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["nomfichier",{"_index":398,"title":{},"body":{"classes/FileHandler.html":{}}}],["noms",{"_index":379,"title":{},"body":{"classes/FileHandler.html":{}}}],["nouveau",{"_index":290,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/NavbarComponent.html":{},"injectables/ProductListService.html":{}}}],["nouvel",{"_index":301,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["nouvelles",{"_index":771,"title":{},"body":{"injectables/ProductListService.html":{}}}],["null",{"_index":544,"title":{},"body":{"injectables/LoginService.html":{}}}],["number",{"_index":596,"title":{},"body":{"interfaces/Product.html":{}}}],["numero",{"_index":672,"title":{},"body":{"components/ProductListComponent.html":{}}}],["object",{"_index":765,"title":{},"body":{"injectables/ProductListService.html":{},"miscellaneous/variables.html":{}}}],["object.entries(this.form.value",{"_index":262,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["objet",{"_index":302,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"classes/FileHandler.html":{}}}],["observable",{"_index":399,"title":{},"body":{"classes/FileHandler.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["occurence",{"_index":798,"title":{},"body":{"injectables/ProductListService.html":{}}}],["onfileselected",{"_index":184,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["onfileselected(event",{"_index":223,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["oninit",{"_index":175,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["openimage",{"_index":612,"title":{},"body":{"components/ProductListComponent.html":{}}}],["openimage(name",{"_index":656,"title":{},"body":{"components/ProductListComponent.html":{}}}],["optional",{"_index":130,"title":{},"body":{"guards/AuthGuardService.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["options",{"_index":267,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"injectables/ProductListService.html":{}}}],["options).subscribe((data",{"_index":274,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["ou",{"_index":801,"title":{},"body":{"injectables/ProductListService.html":{}}}],["out",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{},"index.html":{},"overview.html":{}}}],["ouvre",{"_index":632,"title":{},"body":{"components/ProductListComponent.html":{}}}],["overview",{"_index":964,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":882,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":966,"title":{},"body":{"index.html":{}}}],["paginator",{"_index":687,"title":{},"body":{"components/ProductListComponent.html":{}}}],["par",{"_index":530,"title":{},"body":{"injectables/LoginService.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["param",{"_index":277,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"injectables/LoginService.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["parameters",{"_index":129,"title":{},"body":{"guards/AuthGuardService.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["paramètres",{"_index":791,"title":{},"body":{"injectables/ProductListService.html":{}}}],["pas",{"_index":441,"title":{},"body":{"components/LoginComponent.html":{},"injectables/ProductListService.html":{}}}],["passe",{"_index":447,"title":{},"body":{"components/LoginComponent.html":{}}}],["passer",{"_index":819,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["password",{"_index":438,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/User.html":{}}}],["passwordinput",{"_index":433,"title":{},"body":{"components/LoginComponent.html":{}}}],["patch",{"_index":777,"title":{},"body":{"injectables/ProductListService.html":{}}}],["path",{"_index":108,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["pathmatch",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["permet",{"_index":198,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["platform",{"_index":952,"title":{},"body":{"index.html":{}}}],["popup",{"_index":176,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["popup'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["popup.component",{"_index":750,"title":{},"body":{"modules/ProductListModule.html":{}}}],["popup.component.css",{"_index":177,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["popup.component.html",{"_index":178,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["popup.component.ts",{"_index":174,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"coverage.html":{}}}],["popup.component.ts:112",{"_index":328,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["popup.component.ts:15",{"_index":249,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["popup.component.ts:17",{"_index":330,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["popup.component.ts:22",{"_index":245,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["popup.component.ts:24",{"_index":194,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["popup.component.ts:25",{"_index":196,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["popup.component.ts:26",{"_index":193,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["popup.component.ts:27",{"_index":315,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["popup.component.ts:28",{"_index":316,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["popup.component.ts:29",{"_index":222,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["popup.component.ts:30",{"_index":314,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["popup.component.ts:37",{"_index":326,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["popup.component.ts:39",{"_index":197,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["popup.component.ts:54",{"_index":317,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["popup.component.ts:64",{"_index":224,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["popup.component.ts:72",{"_index":242,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["popup.component.ts:87",{"_index":327,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["popup.component.ts:97",{"_index":321,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["popup/create",{"_index":173,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"modules/ProductListModule.html":{},"coverage.html":{}}}],["popup/edit",{"_index":311,"title":{},"body":{"components/EditProductPopupComponent.html":{},"modules/ProductListModule.html":{},"coverage.html":{}}}],["post",{"_index":392,"title":{},"body":{"classes/FileHandler.html":{},"injectables/ProductListService.html":{}}}],["pour",{"_index":626,"title":{},"body":{"components/ProductListComponent.html":{}}}],["prend",{"_index":795,"title":{},"body":{"injectables/ProductListService.html":{}}}],["previsualizeimage",{"_index":185,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["previsualizeimage(event",{"_index":241,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["private",{"_index":255,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["product",{"_index":47,"title":{"interfaces/Product.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"injectables/ProductListService.html":{},"coverage.html":{}}}],["product.description.substring(0",{"_index":733,"title":{},"body":{"components/ProductListComponent.html":{}}}],["product.libelle",{"_index":347,"title":{},"body":{"components/EditProductPopupComponent.html":{},"components/ProductListComponent.html":{}}}],["product.quantite",{"_index":736,"title":{},"body":{"components/ProductListComponent.html":{}}}],["product.type",{"_index":735,"title":{},"body":{"components/ProductListComponent.html":{}}}],["production",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productlistcomponent",{"_index":55,"title":{"components/ProductListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"coverage.html":{},"overview.html":{}}}],["productlistmodule",{"_index":71,"title":{"modules/ProductListModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductListModule.html":{},"modules.html":{},"overview.html":{}}}],["productlistservice",{"_index":195,"title":{"injectables/ProductListService.html":{}},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"injectables/ProductListService.html":{},"coverage.html":{},"overview.html":{}}}],["productlistservice.createproduct",{"_index":219,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["productlistservice.deleteproduct",{"_index":629,"title":{},"body":{"components/ProductListComponent.html":{}}}],["productlistservice.editproduct",{"_index":319,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["productlistservice.getproduct",{"_index":646,"title":{},"body":{"components/ProductListComponent.html":{}}}],["productlistservice.getproductbyid",{"_index":654,"title":{},"body":{"components/ProductListComponent.html":{}}}],["productlistservice.getproducts",{"_index":664,"title":{},"body":{"components/ProductListComponent.html":{}}}],["productlistservice.getproducttypes",{"_index":649,"title":{},"body":{"components/ProductListComponent.html":{}}}],["products",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/FileHandler.html":{},"injectables/LoginService.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["producttypes",{"_index":187,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["produit",{"_index":202,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["produits",{"_index":644,"title":{},"body":{"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["project",{"_index":918,"title":{},"body":{"index.html":{}}}],["properties",{"_index":22,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"properties.html":{}}}],["provide",{"_index":168,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["providedin",{"_index":541,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProductListService.html":{}}}],["providers",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{}}}],["prévisualisation",{"_index":237,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["prévisualiser",{"_index":244,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["prêt",{"_index":385,"title":{},"body":{"classes/FileHandler.html":{}}}],["public",{"_index":121,"title":{},"body":{"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["quantit",{"_index":299,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/ProductListComponent.html":{}}}],["quantite",{"_index":248,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{}}}],["qui",{"_index":621,"title":{},"body":{"components/ProductListComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["reactiveformsmodule",{"_index":153,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{}}}],["reader",{"_index":282,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/ProductListComponent.html":{}}}],["reader.onload",{"_index":284,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/ProductListComponent.html":{}}}],["reader.readasdataurl(file",{"_index":288,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["reader.readasdataurl(img",{"_index":703,"title":{},"body":{"components/ProductListComponent.html":{}}}],["reader.result",{"_index":287,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/ProductListComponent.html":{}}}],["recap",{"_index":417,"title":{},"body":{"classes/FileHandler.html":{}}}],["recherch",{"_index":802,"title":{},"body":{"injectables/ProductListService.html":{}}}],["recherche",{"_index":669,"title":{},"body":{"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["rechercher",{"_index":799,"title":{},"body":{"injectables/ProductListService.html":{}}}],["recherchez",{"_index":739,"title":{},"body":{"components/ProductListComponent.html":{}}}],["redirectto",{"_index":109,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirig",{"_index":463,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirige",{"_index":515,"title":{},"body":{"injectables/LoginService.html":{}}}],["reference",{"_index":965,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":418,"title":{},"body":{"classes/FileHandler.html":{},"components/ProductListComponent.html":{}}}],["regexp('^(?=.*[a",{"_index":478,"title":{},"body":{"components/LoginComponent.html":{}}}],["reload",{"_index":932,"title":{},"body":{"index.html":{}}}],["request",{"_index":835,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request.clone",{"_index":839,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["require",{"_index":879,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requis",{"_index":296,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["requête",{"_index":211,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["requêtes",{"_index":773,"title":{},"body":{"injectables/ProductListService.html":{}}}],["res.accesstoken",{"_index":547,"title":{},"body":{"injectables/LoginService.html":{}}}],["reset",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{},"overview.html":{}}}],["resetfilters",{"_index":613,"title":{},"body":{"components/ProductListComponent.html":{}}}],["responsetype",{"_index":814,"title":{},"body":{"injectables/ProductListService.html":{}}}],["results",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthenticationModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retourne",{"_index":767,"title":{},"body":{"injectables/ProductListService.html":{}}}],["retourner",{"_index":436,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["return",{"_index":142,"title":{},"body":{"guards/AuthGuardService.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["returns",{"_index":132,"title":{},"body":{"guards/AuthGuardService.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoginService.html":{},"injectables/ProductListService.html":{}}}],["root'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["route",{"_index":427,"title":{},"body":{"components/LoginComponent.html":{}}}],["router",{"_index":123,"title":{},"body":{"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["routermodule",{"_index":99,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":98,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":97,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":926,"title":{},"body":{"index.html":{}}}],["running",{"_index":944,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":400,"title":{},"body":{"classes/FileHandler.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{},"dependencies.html":{}}}],["récupère",{"_index":527,"title":{},"body":{"injectables/LoginService.html":{},"components/ProductListComponent.html":{}}}],["récupér",{"_index":834,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["récupérant",{"_index":204,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["récupérer",{"_index":225,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"injectables/ProductListService.html":{}}}],["réinitialiser",{"_index":743,"title":{},"body":{"components/ProductListComponent.html":{}}}],["réponse",{"_index":531,"title":{},"body":{"injectables/LoginService.html":{}}}],["résultat",{"_index":668,"title":{},"body":{"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["réussie",{"_index":213,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["s'il",{"_index":789,"title":{},"body":{"injectables/ProductListService.html":{}}}],["s'ils",{"_index":526,"title":{},"body":{"injectables/LoginService.html":{}}}],["sa",{"_index":236,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["safeurl",{"_index":335,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["saisi",{"_index":448,"title":{},"body":{"components/LoginComponent.html":{}}}],["save",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":935,"title":{},"body":{"index.html":{}}}],["se",{"_index":493,"title":{},"body":{"components/LoginComponent.html":{}}}],["search",{"_index":675,"title":{},"body":{"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["security",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["see",{"_index":218,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"components/ProductListComponent.html":{}}}],["selectedproduct",{"_index":603,"title":{},"body":{"components/ProductListComponent.html":{}}}],["selectionn",{"_index":322,"title":{},"body":{"components/EditProductPopupComponent.html":{},"components/ProductListComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["sent",{"_index":420,"title":{},"body":{"classes/FileHandler.html":{}}}],["serve",{"_index":927,"title":{},"body":{"index.html":{}}}],["server",{"_index":925,"title":{},"body":{"index.html":{}}}],["service",{"_index":188,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/ProductListComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["service(value",{"_index":701,"title":{},"body":{"components/ProductListComponent.html":{}}}],["ses",{"_index":458,"title":{},"body":{"components/LoginComponent.html":{},"injectables/ProductListService.html":{}}}],["set",{"_index":695,"title":{},"body":{"components/ProductListComponent.html":{}}}],["setfilters",{"_index":614,"title":{},"body":{"components/ProductListComponent.html":{}}}],["setheaders",{"_index":840,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["setmatpaginator(paginator",{"_index":685,"title":{},"body":{"components/ProductListComponent.html":{}}}],["setnewfilename",{"_index":362,"title":{},"body":{"classes/FileHandler.html":{}}}],["setservice(value",{"_index":690,"title":{},"body":{"components/ProductListComponent.html":{}}}],["settimeout",{"_index":139,"title":{},"body":{"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"components/ProductListComponent.html":{}}}],["si",{"_index":209,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{}}}],["signin",{"_index":506,"title":{},"body":{"injectables/LoginService.html":{}}}],["signin(user",{"_index":518,"title":{},"body":{"injectables/LoginService.html":{}}}],["signinform",{"_index":428,"title":{},"body":{"components/LoginComponent.html":{}}}],["sinon",{"_index":794,"title":{},"body":{"injectables/ProductListService.html":{}}}],["solid",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["son",{"_index":659,"title":{},"body":{"components/ProductListComponent.html":{}}}],["sont",{"_index":460,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthenticationModule.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"index.html":{}}}],["spec\\.ts",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":96,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authentication/auth",{"_index":119,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/authentication/authentication.module.ts",{"_index":150,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/app/authentication/login/login.component.ts",{"_index":423,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/authentication/login/login.component.ts:13",{"_index":471,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:14",{"_index":467,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:16",{"_index":473,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:18",{"_index":434,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:21",{"_index":466,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:22",{"_index":468,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:23",{"_index":469,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:39",{"_index":465,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:48",{"_index":455,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:64",{"_index":452,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:73",{"_index":435,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.service.ts",{"_index":502,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/authentication/login/login.service.ts:11",{"_index":538,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/authentication/login/login.service.ts:12",{"_index":536,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/authentication/login/login.service.ts:14",{"_index":540,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/authentication/login/login.service.ts:17",{"_index":508,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/authentication/login/login.service.ts:26",{"_index":520,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/authentication/login/login.service.ts:35",{"_index":517,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/authentication/login/login.service.ts:42",{"_index":509,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/authentication/user.ts",{"_index":845,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/authentication/user.ts:2",{"_index":846,"title":{},"body":{"classes/User.html":{}}}],["src/app/authentication/user.ts:3",{"_index":848,"title":{},"body":{"classes/User.html":{}}}],["src/app/authentication/user.ts:4",{"_index":847,"title":{},"body":{"classes/User.html":{}}}],["src/app/file",{"_index":349,"title":{},"body":{"classes/FileHandler.html":{},"coverage.html":{}}}],["src/app/product",{"_index":171,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"modules/ProductListModule.html":{},"injectables/ProductListService.html":{},"coverage.html":{}}}],["src/app/token",{"_index":816,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":873,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":876,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":877,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":916,"title":{"index.html":{}},"body":{}}],["statements",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":575,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["stoage",{"_index":532,"title":{},"body":{"injectables/LoginService.html":{}}}],["stock",{"_index":307,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["storage",{"_index":514,"title":{},"body":{"injectables/LoginService.html":{},"interceptors/TokenInterceptor.html":{}}}],["stored",{"_index":941,"title":{},"body":{"index.html":{}}}],["string",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"classes/User.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["subscribe(data",{"_index":720,"title":{},"body":{"components/ProductListComponent.html":{}}}],["support",{"_index":967,"title":{},"body":{"modules.html":{}}}],["suppression",{"_index":628,"title":{},"body":{"components/ProductListComponent.html":{}}}],["supprim",{"_index":635,"title":{},"body":{"components/ProductListComponent.html":{}}}],["supprime",{"_index":622,"title":{},"body":{"components/ProductListComponent.html":{}}}],["supprimer",{"_index":510,"title":{},"body":{"injectables/LoginService.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["svg",{"_index":893,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["sélectionnez",{"_index":305,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["sûr",{"_index":709,"title":{},"body":{"components/ProductListComponent.html":{}}}],["t",{"_index":715,"title":{},"body":{"components/ProductListComponent.html":{}}}],["table",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["tableau",{"_index":645,"title":{},"body":{"components/ProductListComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["templatecreate",{"_index":556,"title":{},"body":{"components/NavbarComponent.html":{}}}],["templateedit",{"_index":604,"title":{},"body":{"components/ProductListComponent.html":{}}}],["templateref",{"_index":572,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["templateshowimg",{"_index":605,"title":{},"body":{"components/ProductListComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["test",{"_index":947,"title":{},"body":{"index.html":{}}}],["testing",{"_index":957,"title":{},"body":{"index.html":{}}}],["tests",{"_index":946,"title":{},"body":{"index.html":{}}}],["this._loginservice",{"_index":582,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._loginservice.isloggedin",{"_index":585,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._productlistservice",{"_index":583,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._service",{"_index":700,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this._service.deleteproduct(id).subscribe",{"_index":729,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this._service.getimage(name).subscribe(img",{"_index":702,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this._service.getproductbyid(id).subscribe((data",{"_index":727,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this._service.getproducts().subscribe((data",{"_index":726,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this._service.getproducts().subscribe(data",{"_index":724,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this._service.getproducttypes().subscribe((data",{"_index":725,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.auth.gettoken",{"_index":843,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this.auth.isloggedin",{"_index":138,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.datasource.data",{"_index":722,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.datasource.paginator",{"_index":697,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.deleteproduct(id",{"_index":712,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.dialog.open(this.templatecreate",{"_index":589,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.dialog.open(this.templateedit",{"_index":706,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.dialog.open(this.templateshowimg",{"_index":704,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.filehandler",{"_index":256,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["this.filehandler.setnewfilename",{"_index":264,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["this.filehandler.tosend",{"_index":278,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["this.filehandler.tosend.alias",{"_index":266,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["this.filehandler.uploadimage",{"_index":275,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["this.filterform.get('type').value",{"_index":719,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.filterform.reset",{"_index":723,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.form.controls['description'].setvalue(this.product.description",{"_index":337,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["this.form.controls['libelle'].setvalue(this.product.libelle",{"_index":336,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["this.form.controls['quantite'].setvalue(this.product.quantite",{"_index":339,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["this.form.controls['type'].setvalue(this.product.type",{"_index":338,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["this.form.value['image",{"_index":342,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["this.formbuilder.group",{"_index":246,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/ProductListComponent.html":{}}}],["this.getproducts",{"_index":698,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.getproducttypes",{"_index":699,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.getselectedproduct(id",{"_index":705,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.gettoken",{"_index":543,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.delete(this.url_api",{"_index":812,"title":{},"body":{"injectables/ProductListService.html":{}}}],["this.http.get(this.url_api",{"_index":806,"title":{},"body":{"injectables/ProductListService.html":{}}}],["this.http.get(this.url_img",{"_index":813,"title":{},"body":{"injectables/ProductListService.html":{}}}],["this.http.get(url",{"_index":809,"title":{},"body":{"injectables/ProductListService.html":{}}}],["this.http.patch(this.url_api",{"_index":811,"title":{},"body":{"injectables/ProductListService.html":{}}}],["this.http.post(this.url_api",{"_index":421,"title":{},"body":{"classes/FileHandler.html":{},"injectables/LoginService.html":{},"injectables/ProductListService.html":{}}}],["this.imagesrc",{"_index":286,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/ProductListComponent.html":{}}}],["this.initimage(this.product.image",{"_index":340,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["this.islogged",{"_index":584,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loginservice.dologout",{"_index":482,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginservice.isloggedin",{"_index":484,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginservice.signin(this.signinform.value).then",{"_index":483,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.previsualizeimage(event",{"_index":280,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["this.product.image",{"_index":343,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["this.productlistservice.getproducttypes().subscribe(data",{"_index":586,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.products",{"_index":721,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.producttypes",{"_index":587,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["this.route.navigate(['/products",{"_index":486,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['./login",{"_index":140,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.router.navigate(['/login",{"_index":550,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.selectedproduct",{"_index":728,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.selectedproduct.libelle",{"_index":711,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.service.createproduct(body",{"_index":273,"title":{},"body":{"components/CreateProductPopupComponent.html":{}}}],["this.service.editproduct(this.product.id",{"_index":344,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["this.service.getimage(name).subscribe(img",{"_index":345,"title":{},"body":{"components/EditProductPopupComponent.html":{}}}],["this.signinform",{"_index":476,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.signinform.controls['password'].haserror('pattern",{"_index":492,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.signinform.controls['password'].haserror('required",{"_index":491,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.signinform.controls['username'].haserror('required",{"_index":490,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.signinform.get('password",{"_index":475,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.tosend",{"_index":409,"title":{},"body":{"classes/FileHandler.html":{}}}],["this.tosend.alias",{"_index":405,"title":{},"body":{"classes/FileHandler.html":{}}}],["this.tosend.name.split('.')[0",{"_index":402,"title":{},"body":{"classes/FileHandler.html":{}}}],["this.tosend.name.split('.')[1",{"_index":404,"title":{},"body":{"classes/FileHandler.html":{}}}],["this.uploadimagerequest(formdata).subscribe",{"_index":411,"title":{},"body":{"classes/FileHandler.html":{}}}],["this.url_api",{"_index":808,"title":{},"body":{"injectables/ProductListService.html":{}}}],["timestamp",{"_index":376,"title":{},"body":{"classes/FileHandler.html":{}}}],["title",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":412,"title":{},"body":{"classes/FileHandler.html":{},"components/ProductListComponent.html":{}}}],["token",{"_index":156,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/LoginService.html":{},"interceptors/TokenInterceptor.html":{}}}],["tokeninterceptor",{"_index":149,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"modules/AuthenticationModule.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["tosend",{"_index":360,"title":{},"body":{"classes/FileHandler.html":{}}}],["tous",{"_index":663,"title":{},"body":{"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["transmettre",{"_index":772,"title":{},"body":{"injectables/ProductListService.html":{}}}],["tre",{"_index":386,"title":{},"body":{"classes/FileHandler.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["true",{"_index":144,"title":{},"body":{"guards/AuthGuardService.html":{},"modules/AuthenticationModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":716,"title":{},"body":{"components/ProductListComponent.html":{}}}],["tslib",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":648,"title":{},"body":{"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["un",{"_index":201,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/ProductListService.html":{},"interceptors/TokenInterceptor.html":{}}}],["undefined",{"_index":569,"title":{},"body":{"components/NavbarComponent.html":{}}}],["une",{"_index":232,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{}}}],["unit",{"_index":945,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":534,"title":{},"body":{"injectables/LoginService.html":{}}}],["upload",{"_index":422,"title":{},"body":{"classes/FileHandler.html":{}}}],["uploadimage",{"_index":363,"title":{},"body":{"classes/FileHandler.html":{}}}],["uploadimagerequest",{"_index":364,"title":{},"body":{"classes/FileHandler.html":{}}}],["uploadimagerequest(file",{"_index":388,"title":{},"body":{"classes/FileHandler.html":{}}}],["url",{"_index":807,"title":{},"body":{"injectables/ProductListService.html":{}}}],["url_api",{"_index":361,"title":{},"body":{"classes/FileHandler.html":{},"injectables/LoginService.html":{},"injectables/ProductListService.html":{}}}],["url_img",{"_index":760,"title":{},"body":{"injectables/ProductListService.html":{}}}],["urlencoded",{"_index":272,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["urlsearchparams",{"_index":260,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"injectables/ProductListService.html":{}}}],["use",{"_index":937,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":169,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["user",{"_index":519,"title":{"classes/User.html":{}},"body":{"injectables/LoginService.html":{},"classes/User.html":{},"coverage.html":{}}}],["user).subscribe((res",{"_index":545,"title":{},"body":{"injectables/LoginService.html":{}}}],["username",{"_index":453,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/User.html":{}}}],["utilisateur",{"_index":457,"title":{},"body":{"components/LoginComponent.html":{}}}],["utilisateurs",{"_index":525,"title":{},"body":{"injectables/LoginService.html":{}}}],["valeurs",{"_index":206,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"injectables/ProductListService.html":{}}}],["validateurs",{"_index":442,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators",{"_index":333,"title":{},"body":{"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{}}}],["validators.pattern",{"_index":477,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.required",{"_index":329,"title":{},"body":{"components/EditProductPopupComponent.html":{},"components/LoginComponent.html":{}}}],["valides",{"_index":461,"title":{},"body":{"components/LoginComponent.html":{}}}],["value",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductListService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["variable",{"_index":233,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"components/ProductListComponent.html":{},"coverage.html":{}}}],["variables",{"_index":977,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vers",{"_index":216,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"injectables/ProductListService.html":{}}}],["version",{"_index":922,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":658,"title":{},"body":{"components/ProductListComponent.html":{},"interceptors/TokenInterceptor.html":{},"index.html":{}}}],["viewchild",{"_index":332,"title":{},"body":{"components/EditProductPopupComponent.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["viewchild('templatecreate",{"_index":574,"title":{},"body":{"components/NavbarComponent.html":{}}}],["viewchild('templateedit",{"_index":681,"title":{},"body":{"components/ProductListComponent.html":{}}}],["viewchild('templateshowimg",{"_index":683,"title":{},"body":{"components/ProductListComponent.html":{}}}],["viewchild(matpaginator",{"_index":694,"title":{},"body":{"components/ProductListComponent.html":{}}}],["viewencapsulation",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["viewencapsulation.none",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["visibility",{"_index":498,"title":{},"body":{"components/LoginComponent.html":{}}}],["visibility_off",{"_index":497,"title":{},"body":{"components/LoginComponent.html":{}}}],["void",{"_index":221,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{},"classes/FileHandler.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ProductListComponent.html":{}}}],["votre",{"_index":496,"title":{},"body":{"components/LoginComponent.html":{}}}],["vouloir",{"_index":710,"title":{},"body":{"components/ProductListComponent.html":{}}}],["vous",{"_index":443,"title":{},"body":{"components/LoginComponent.html":{},"components/ProductListComponent.html":{}}}],["vérifie",{"_index":384,"title":{},"body":{"classes/FileHandler.html":{}}}],["vérifier",{"_index":522,"title":{},"body":{"injectables/LoginService.html":{}}}],["www",{"_index":271,"title":{},"body":{"components/CreateProductPopupComponent.html":{},"components/EditProductPopupComponent.html":{}}}],["y",{"_index":374,"title":{},"body":{"classes/FileHandler.html":{}}}],["yes",{"_index":797,"title":{},"body":{"injectables/ProductListService.html":{}}}],["z])(?=.*[0",{"_index":480,"title":{},"body":{"components/LoginComponent.html":{}}}],["z])(?=.*[a",{"_index":479,"title":{},"body":{"components/LoginComponent.html":{}}}],["zone.js",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ProductListModule.html":{},"overview.html":{}}}],["zéro",{"_index":662,"title":{},"body":{"components/ProductListComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Catalogue'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent {\n  title = 'Catalogue';\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProductPopupComponent', 'selector': 'app-create-product-popup'},{'name': 'EditProductPopupComponent', 'selector': 'app-edit-product-popup'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProductListComponent', 'selector': 'app-product-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nProductListModule\n\nProductListModule\n\nAppModule -->\n\nProductListModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthenticationModule\n                        \n                        \n                            ProductListModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { ProductListModule } from './product-list/product-list.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    NgbModule,\n    AppRoutingModule,\n    AuthenticationModule,\n    ProductListModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { LoginComponent } from './authentication/login/login.component';\nimport { AuthGuardService as AuthGuard } from './authentication/auth-guard.service';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'products', component: ProductListComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardService.html":{"url":"guards/AuthGuardService.html","title":"guard - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/authentication/auth-guard.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: LoginService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/auth-guard.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authentication/auth-guard.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { LoginService } from './login/login.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(public auth: LoginService, public router: Router) {}\n\n  canActivate(): boolean {\n    if (!this.auth.isLoggedIn) {\n      setTimeout(() => this.router.navigate(['./login']), 100);\n      return false;\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nLoginComponent->AuthenticationModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthenticationModule->LoginComponent \n\n\n\n\n\nLoginService\n\nLoginService\n\nAuthenticationModule -->\n\nLoginService->AuthenticationModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAuthenticationModule -->\n\nTokenInterceptor->AuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/authentication/authentication.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoginService\n                        \n                        \n                            TokenInterceptor\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { TokenInterceptor } from '../token-interceptor';\n\nimport { LoginComponent } from './login/login.component';\n\nimport { LoginService } from './login/login.service';\nimport { AuthGuardService } from './auth-guard.service';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatButtonModule,\n  ],\n  declarations: [LoginComponent],\n  exports: [LoginComponent],\n  providers: [\n    LoginService,\n    AuthGuardService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true,\n    },\n  ],\n})\nexport class AuthenticationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProductPopupComponent.html":{"url":"components/CreateProductPopupComponent.html","title":"component - CreateProductPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateProductPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/product-list/create-product-popup/create-product-popup.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-product-popup\n            \n\n            \n                styleUrls\n                ./create-product-popup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-product-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fileHandler\n                            \n                            \n                                form\n                            \n                            \n                                imageSrc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProduct\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                previsualizeImage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                productTypes\n                            \n                            \n                                service\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/product-list/create-product-popup/create-product-popup.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        productTypes\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/product-list/create-product-popup/create-product-popup.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n                \n                    \n                        Type :         ProductListService\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/product-list/create-product-popup/create-product-popup.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createProduct\n                        \n                    \n                \n            \n            \n                \ncreateProduct()\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/create-product-popup/create-product-popup.component.ts:39\n                \n            \n\n\n            \n                \n                    Permet de créer un produit en récupérant les valeurs du formulaire. Si la requête est réussie, l'image est envoyée\nvers l'API.\nSee ProductListService.createProduct\nSee FileHandler.uploadImage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/create-product-popup/create-product-popup.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/create-product-popup/create-product-popup.component.ts:64\n                \n            \n\n\n            \n                \n                    Permet de récupérer le fichier chargé depuis l'input dans une variable et d'afficher sa prévisualisation\ndans le formulaire.\nSee previsualizeImage\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Fichier envoyé depuis le formulaire\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previsualizeImage\n                        \n                    \n                \n            \n            \n                \nprevisualizeImage(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/create-product-popup/create-product-popup.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Image à prévisualiser\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fileHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileHandler\n\n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/create-product-popup/create-product-popup.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    libelle: '',\n    description: '',\n    type: '',\n    quantite: '',\n    image: '',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/create-product-popup/create-product-popup.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageSrc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/create-product-popup/create-product-popup.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Product } from '../product';\nimport { ProductListService } from '../product-list.service';\nimport { FormBuilder } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FileHandler } from '../../file-handler';\n\n@Component({\n  selector: 'app-create-product-popup',\n  templateUrl: './create-product-popup.component.html',\n  styleUrls: ['./create-product-popup.component.css'],\n})\nexport class CreateProductPopupComponent implements OnInit {\n\n  form = this.formBuilder.group({\n    libelle: '',\n    description: '',\n    type: '',\n    quantite: '',\n    image: '',\n  });\n  fileHandler!: FileHandler;\n\n  @Input() productTypes!: string[];\n  @Input() service!: ProductListService;\n  imageSrc: any;\n  constructor(private formBuilder: FormBuilder, private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.fileHandler = new FileHandler(this.http);\n  }\n\n  /**\n   * Permet de créer un produit en récupérant les valeurs du formulaire. Si la requête est réussie, l'image est envoyée\n   * vers l'API.\n   * @see ProductListService.createProduct\n   * @see FileHandler.uploadImage\n   */\n  createProduct() {\n    const body = new URLSearchParams();\n    for (const [key, value] of Object.entries(this.form.value)) {\n      body.set(key, value);\n    }\n    this.fileHandler.setNewFilename()\n    body.set('image', this.fileHandler.toSend.alias);\n\n    const options = {\n      headers: new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded'),\n    };\n\n    this.service.createProduct(body, options).subscribe((data: Product) => {\n      this.fileHandler.uploadImage();\n      console.log(data);\n    });\n  }\n\n  /**\n   * Permet de récupérer le fichier chargé depuis l'input dans une variable et d'afficher sa prévisualisation\n   * dans le formulaire.\n   *\n   * @param event Fichier envoyé depuis le formulaire\n   * @see previsualizeImage\n   */\n  onFileSelected(event: any) {\n    this.fileHandler.toSend = event.target.files[0];\n    this.previsualizeImage(event);\n  }\n\n  /**\n   * @param event Image à prévisualiser\n   */\n  previsualizeImage(event: any): void {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n\n      const reader = new FileReader();\n      reader.onload = e => (this.imageSrc = reader.result);\n\n      reader.readAsDataURL(file);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Ajouter un nouveau produit\n    \n      \n        \n      \n      \n        \n          Nom du produit\n          \n          {{ libelle.value?.length || 0 }}/128\n          \n            Champs requis\n          \n        \n      \n      \n        \n          Description\n          \n          {{ description.value?.length || 0 }}/512\n          \n            Champs requis\n          \n        \n      \n      \n        \n      \n      \n        \n          Type de produit\n          \n            \n              {{ type }}\n            \n          \n          \n            Champs requis\n          \n        \n      \n      \n        \n          Quantité\n          \n          \n            Champs requis\n          \n        \n      \n    \n  \n  \n    Annuler\n    \n  \n\n\n  Ajouter un nouvel objet au catalogue :\n  \n    \n      Nom du produit :\n      \n    \n    \n      Description :\n      \n    \n    \n      Ajoutez une image :\n      \n    \n    \n    Sélectionnez le type de produit :\n    \n      \n        \n          {{ type }}\n        \n      \n    \n    \n    Indiquez le stock disponible actuel :\n    \n      \n    \n  \n  \n  \n    \n    Annuler\n  \n-->\n\n    \n\n    \n                \n                    ./create-product-popup.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Ajouter un nouveau produit                                                Nom du produit                    {{ libelle.value?.length || 0 }}/128                      Champs requis                                                Description                    {{ description.value?.length || 0 }}/512                      Champs requis                                                                    Type de produit                                    {{ type }}                                            Champs requis                                                Quantité                                Champs requis                                    Annuler        Ajouter un nouvel objet au catalogue :            Nom du produit :                    Description :                    Ajoutez une image :                  Sélectionnez le type de produit :                            {{ type }}                          Indiquez le stock disponible actuel :                            Annuler  -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProductPopupComponent', 'selector': 'app-create-product-popup'},{'name': 'EditProductPopupComponent', 'selector': 'app-edit-product-popup'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProductListComponent', 'selector': 'app-product-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateProductPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProductPopupComponent.html":{"url":"components/EditProductPopupComponent.html","title":"component - EditProductPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProductPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/product-list/edit-product-popup/edit-product-popup.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-product-popup\n            \n\n            \n                styleUrls\n                ./edit-product-popup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-product-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fileHandler\n                            \n                            \n                                form\n                            \n                            \n                                imageSrc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editProduct\n                            \n                            \n                                initImage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                previsualizeImage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                product\n                            \n                            \n                                productTypes\n                            \n                            \n                                service\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/product-list/edit-product-popup/edit-product-popup.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        product\n                    \n                \n                \n                    \n                        Type :         Product\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/product-list/edit-product-popup/edit-product-popup.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        productTypes\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/product-list/edit-product-popup/edit-product-popup.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n                \n                    \n                        Type :         ProductListService\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/product-list/edit-product-popup/edit-product-popup.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        editProduct\n                        \n                    \n                \n            \n            \n                \neditProduct()\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/edit-product-popup/edit-product-popup.component.ts:54\n                \n            \n\n\n            \n                \n                    Permet de modifier un produit en récupérant les valeurs du formulaire. Si la requête est réussie, l'image est envoyée\nvers l'API.\nSee ProductListService.editProduct\nSee FileHandler.uploadImage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initImage\n                        \n                    \n                \n            \n            \n                \ninitImage(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/edit-product-popup/edit-product-popup.component.ts:97\n                \n            \n\n\n            \n                \n                    Permet de récupérer le nom de l'image du produit selectionné afin de l'afficher dans le formulaire\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nom de l'image à afficher\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/edit-product-popup/edit-product-popup.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/edit-product-popup/edit-product-popup.component.ts:87\n                \n            \n\n\n            \n                \n                    Permet de récupérer le fichier chargé depuis l'input dans une variable et d'afficher sa prévisualisation\ndans le formulaire.\nSee previsualizeImage\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Fichier envoyé depuis le formulaire\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previsualizeImage\n                        \n                    \n                \n            \n            \n                \nprevisualizeImage(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/edit-product-popup/edit-product-popup.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Image à prévisualiser\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fileHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileHandler\n\n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/edit-product-popup/edit-product-popup.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    libelle: ['', [Validators.required]],\n    description: ['', [Validators.required]],\n    type: ['', [Validators.required]],\n    quantite: ['', [Validators.required]],\n    image: '',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/edit-product-popup/edit-product-popup.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageSrc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/edit-product-popup/edit-product-popup.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { Product } from '../product';\nimport { ProductListService } from '../product-list.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FileHandler } from '../../file-handler';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-edit-product-popup',\n  templateUrl: './edit-product-popup.component.html',\n  styleUrls: ['./edit-product-popup.component.css'],\n})\n\nexport class EditProductPopupComponent implements OnInit {\n\n  form = this.formBuilder.group({\n    libelle: ['', [Validators.required]],\n    description: ['', [Validators.required]],\n    type: ['', [Validators.required]],\n    quantite: ['', [Validators.required]],\n    image: '',\n  });\n  fileHandler: FileHandler;\n\n  @Input() product!: Product;\n  @Input() productTypes!: string[];\n  @Input() service!: ProductListService;\n\n  imageSrc: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n  ) {}\n\n  ngOnInit(): void {\n    this.fileHandler = new FileHandler(this.http);\n\n    this.form.controls['libelle'].setValue(this.product.libelle);\n    this.form.controls['description'].setValue(this.product.description);\n    this.form.controls['type'].setValue(this.product.type);\n    this.form.controls['quantite'].setValue(this.product.quantite);\n\n    this.initImage(this.product.image);\n  }\n\n  /**\n   * Permet de modifier un produit en récupérant les valeurs du formulaire. Si la requête est réussie, l'image est envoyée\n   * vers l'API.\n   * @see ProductListService.editProduct\n   * @see FileHandler.uploadImage\n   */\n  editProduct() {\n    let hasImage: boolean;\n    hasImage = this.form.value['image'] !== '';\n\n    const body = new URLSearchParams();\n    for (const [key, value] of Object.entries(this.form.value)) {\n      body.set(key, value);\n    }\n\n    if (!hasImage) {\n      body.set('image', this.product.image);\n    } else {\n      this.fileHandler.setNewFilename()\n      body.set('image', this.fileHandler.toSend.alias);\n    }\n\n    const options = {\n      headers: new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded'),\n    };\n\n    this.service.editProduct(this.product.id, body, options).subscribe((data: Product) => {\n      this.fileHandler.uploadImage();\n      console.log(data);\n    });\n  }\n\n  /**\n   * Permet de récupérer le fichier chargé depuis l'input dans une variable et d'afficher sa prévisualisation\n   * dans le formulaire.\n   *\n   * @param event Fichier envoyé depuis le formulaire\n   * @see previsualizeImage\n   */\n  onFileSelected(event: any) {\n    this.fileHandler.toSend = event.target.files[0];\n    this.previsualizeImage(event);\n  }\n\n  /**\n   * Permet de récupérer le nom de l'image du produit selectionné afin de l'afficher dans le formulaire\n   *\n   * @param name Nom de l'image à afficher\n   */\n  initImage(name: string) {\n    this.service.getImage(name).subscribe(img => {\n\n      const file = img;\n\n      const reader = new FileReader();\n      reader.onload = e => (this.imageSrc = reader.result);\n\n      reader.readAsDataURL(file);\n    });\n  }\n\n  /**\n   * @param event Image à prévisualiser\n   */\n  previsualizeImage(event: any): void {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n\n      const reader = new FileReader();\n      reader.onload = e => (this.imageSrc = reader.result);\n\n      reader.readAsDataURL(file);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    Modifier {{ product.libelle }} :\n    \n      \n        \n      \n\n      \n        \n          Nom du produit\n          \n          {{ libelle.value?.length || 0 }}/128\n          \n            Champs requis\n          \n        \n      \n\n      \n        \n          Description\n          \n          {{ description.value?.length || 0 }}/512\n          \n            Champs requis\n          \n        \n      \n\n      \n        \n      \n\n      \n        \n          Type de produit\n          \n            \n              {{ type }}\n            \n          \n          \n            Champs requis\n          \n        \n      \n\n      \n        \n          Quantité\n          \n          \n            Champs requis\n          \n        \n      \n    \n  \n  \n    Annuler\n    \n  \n\n\n    \n\n    \n                \n                    ./edit-product-popup.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Modifier {{ product.libelle }} :                                                Nom du produit                    {{ libelle.value?.length || 0 }}/128                      Champs requis                                                Description                    {{ description.value?.length || 0 }}/512                      Champs requis                                                                    Type de produit                                    {{ type }}                                            Champs requis                                                Quantité                                Champs requis                                    Annuler      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProductPopupComponent', 'selector': 'app-create-product-popup'},{'name': 'EditProductPopupComponent', 'selector': 'app-edit-product-popup'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProductListComponent', 'selector': 'app-product-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditProductPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileHandler.html":{"url":"classes/FileHandler.html","title":"class - FileHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/file-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Cette classe contient des méthodes concernant la manipulation de fichiers et l'envoi de fichiers vers l'API\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toSend\n                            \n                            \n                                URL_API\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setNewFilename\n                            \n                            \n                                uploadImage\n                            \n                            \n                                uploadImageRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/file-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        toSend\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/file-handler.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        URL_API\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://crud-products-nodejs-nidal.herokuapp.com/products'\n                    \n                \n                    \n                        \n                                Defined in src/app/file-handler.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setNewFilename\n                        \n                    \n                \n            \n            \n                \nsetNewFilename()\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-handler.ts:18\n                \n            \n\n\n            \n                \n                    Cette méthode permet de modifier le nom du fichier à envoyer en y ajoutant un timestamp afin d'éviter les conflits\nde noms entre fichiers aux noms identiques\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadImage\n                        \n                    \n                \n            \n            \n                \nuploadImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-handler.ts:28\n                \n            \n\n\n            \n                \n                    Cette méthode vérifie si un fichier est prêt à être envoyé (var toSend) et l'envoie vers l'API\nSee uploadImageRequest\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadImageRequest\n                        \n                    \n                \n            \n            \n                \nuploadImageRequest(file: FormData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-handler.ts:43\n                \n            \n\n\n            \n                \n                    Envoie une requête HTTP POST vers l'API afin d'y envoyer une image depuis le client.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            FormData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Un FormData ayant comme forme {'file', nomfichier}\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * Cette classe contient des méthodes concernant la manipulation de fichiers et l'envoi de fichiers vers l'API\n */\n\nexport class FileHandler {\n  toSend: any;\n  URL_API = 'https://crud-products-nodejs-nidal.herokuapp.com/products';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Cette méthode permet de modifier le nom du fichier à envoyer en y ajoutant un timestamp afin d'éviter les conflits\n   * de noms entre fichiers aux noms identiques\n   */\n  setNewFilename() {\n    const filename = this.toSend.name.split('.')[0];\n    const fileExt = this.toSend.name.split('.')[1];\n    this.toSend.alias = filename.split('.').join('_') + '_' + Date.now() + '.' + fileExt;\n  }\n\n  /**\n   * Cette méthode vérifie si un fichier est prêt à être envoyé (var toSend) et l'envoie vers l'API\n   * @see uploadImageRequest\n   */\n  uploadImage() {\n    if (this.toSend) {\n      const formData = new FormData();\n      formData.append('file', this.toSend, this.toSend.alias);\n      this.uploadImageRequest(formData).subscribe(() => {\n        // TODO : message confirmation création objet avec recap + refresh\n        console.log('file sent');\n      });\n    }\n  }\n\n  /**\n   * Envoie une requête HTTP POST vers l'API afin d'y envoyer une image depuis le client.\n   * @param file Un FormData ayant comme forme {'file', nomfichier}\n   */\n  uploadImageRequest(file: FormData): Observable {\n    return this.http.post(this.URL_API + '/upload-image', file);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authentication/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formBuilder\n                            \n                            \n                                hide\n                            \n                            \n                                    Public\n                                loginService\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                signinForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPasswordErrorMessage\n                            \n                            \n                                getUsernameErrorMessage\n                            \n                            \n                                loginUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    passwordInput\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, loginService: LoginService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPasswordErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetPasswordErrorMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authentication/login/login.component.ts:73\n                \n            \n\n\n            \n                \n                    Cette méthode permet de retourner une erreur si le champs password du formulaire ne correspond pas aux validateurs\n\n\n                    \n                        Returns :     \"\" | \"Vous devez entrer un mot de passe\" | \"Le mot de passe saisi n'est pas assez fort\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsernameErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetUsernameErrorMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authentication/login/login.component.ts:64\n                \n            \n\n\n            \n                \n                    Cette méthode permet de retourner une erreur si le champs username du formulaire ne correspond pas aux validateurs\n\n\n                    \n                        Returns :     \"Vous devez entrer un nom d'utilisateur\" | \"\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authentication/login/login.component.ts:48\n                \n            \n\n\n            \n                \n                    Cette méthode permet de connecter un utilisateur. Si ses identifiants sont valides,\nil est redirigé vers la catalogue\nSee LoginService.signIn\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authentication/login/login.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/login/login.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/login/login.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signinForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/login/login.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        passwordInput\n                    \n                \n\n                \n                    \n                        getpasswordInput()\n                    \n                \n                            \n                                \n                                    Defined in src/app/authentication/login/login.component.ts:16\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoginService } from './login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\n\nexport class LoginComponent implements OnInit {\n  signinForm: FormGroup;\n  hide = true;\n\n  get passwordInput() {\n    return this.signinForm.get('password');\n  }\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public loginService: LoginService,\n    public route: Router\n  ) {\n    this.signinForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(\n            new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})')\n          ),\n        ],\n      ],\n    });\n  }\n\n  ngOnInit() {\n    this.loginService.doLogout();\n  }\n\n  /**\n   * Cette méthode permet de connecter un utilisateur. Si ses identifiants sont valides,\n   * il est redirigé vers la catalogue\n   * @see LoginService.signIn\n   */\n  loginUser() {\n    this.loginService.signIn(this.signinForm.value).then(() => {\n      setTimeout(() => {\n        if (this.loginService.isLoggedIn) {\n          console.log('connecté');\n          this.route.navigate(['/products']);\n        } else {\n          console.log('mauvais identifiant');\n        }\n      }, 1000);\n    });\n  }\n\n  /**\n   * Cette méthode permet de retourner une erreur si le champs username du formulaire ne correspond pas aux validateurs\n   */\n  getUsernameErrorMessage() {\n    return this.signinForm.controls['username'].hasError('required')\n      ? \"Vous devez entrer un nom d'utilisateur\"\n      : '';\n  }\n\n  /**\n   * Cette méthode permet de retourner une erreur si le champs password du formulaire ne correspond pas aux validateurs\n   */\n  getPasswordErrorMessage() {\n    if (this.signinForm.controls['password'].hasError('required')) {\n      return 'Vous devez entrer un mot de passe';\n    }\n    return this.signinForm.controls['password'].hasError('pattern')\n      ? \"Le mot de passe saisi n'est pas assez fort\"\n      : '';\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Se connecter\n            \n              \n                Nom d'utilisateur\n                \n                \n                  close\n                \n                {{\n                  getUsernameErrorMessage()\n                }}\n              \n            \n            \n              \n                Entrez votre mot de passe\n                \n                \n                  {{ hide ? 'visibility_off' : 'visibility' }}\n                \n                {{\n                  getPasswordErrorMessage()\n                }}\n              \n            \n            \n              Connexion\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Se connecter                                          Nom d\\'utilisateur                                                  close                                {{                  getUsernameErrorMessage()                }}                                                                    Entrez votre mot de passe                                                  {{ hide ? \\'visibility_off\\' : \\'visibility\\' }}                                {{                  getPasswordErrorMessage()                }}                                                    Connexion                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProductPopupComponent', 'selector': 'app-create-product-popup'},{'name': 'EditProductPopupComponent', 'selector': 'app-edit-product-popup'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProductListComponent', 'selector': 'app-product-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authentication/login/login.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                headers\n                            \n                            \n                                URL_API\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doLogout\n                            \n                            \n                                getToken\n                            \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isLoggedIn\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/login/login.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        doLogout\n                        \n                    \n                \n            \n            \n                \ndoLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authentication/login/login.service.ts:42\n                \n            \n\n\n            \n                \n                    Cette méthode permet de supprimer l'access_token de l'utilisateur du local storage et le redirige vers l'accueil\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authentication/login/login.service.ts:35\n                \n            \n\n\n            \n                \n                    Cette méthode permet de retourner l'access_token depuis le local storage du client.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/authentication/login/login.service.ts:26\n                \n            \n\n\n            \n                \n                    Cette méthode asynchrone permet de vérifier les crédits d'un utilisateurs. S'ils le sont, on récupère l'access token\ngénéré par la réponse dans le local stoage du client\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Les identifiants de l'utilisateurs (username & password)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders().set('Content-Type', 'application/json')\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/login/login.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        URL_API\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://crud-products-nodejs-nidal.herokuapp.com/auth/signin'\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/login/login.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isLoggedIn\n                    \n                \n\n                \n                    \n                        getisLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/authentication/login/login.service.ts:14\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../user';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n\n  URL_API = 'https://crud-products-nodejs-nidal.herokuapp.com/auth/signin';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  get isLoggedIn(): boolean {\n    const authToken = this.getToken();\n    return authToken !== null;\n  }\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  /**\n   * Cette méthode asynchrone permet de vérifier les crédits d'un utilisateurs. S'ils le sont, on récupère l'access token\n   * généré par la réponse dans le local stoage du client\n   * @param user Les identifiants de l'utilisateurs (username & password)\n   */\n  async signIn(user: User) {\n    return this.http.post(this.URL_API, user).subscribe((res: any) => {\n      localStorage.setItem('access_token', res.accessToken);\n    });\n  }\n\n  /**\n   * Cette méthode permet de retourner l'access_token depuis le local storage du client.\n   */\n  getToken() {\n    return localStorage.getItem('access_token');\n  }\n\n  /**\n   * Cette méthode permet de supprimer l'access_token de l'utilisateur du local storage et le redirige vers l'accueil\n   */\n  doLogout() {\n    localStorage.removeItem('access_token');\n    this.router.navigate(['/login']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/product-list/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isLogged\n                            \n                            \n                                    Public\n                                productTypes\n                            \n                            \n                                templateCreate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProductPopup\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loginService\n                                \n                                \n                                    productListService\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_loginService: LoginService, _productListService: ProductListService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/product-list/navbar/navbar.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _productListService\n                                                  \n                                                        \n                                                                        ProductListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createProductPopup\n                        \n                    \n                \n            \n            \n                \ncreateProductPopup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/navbar/navbar.component.ts:43\n                \n            \n\n\n            \n                \n                    Permet d'ouvrir une fenêtre de dialogue vers le formulaire de création d'un nouveau produit\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/navbar/navbar.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLogged\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/navbar/navbar.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/navbar/navbar.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        templateCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('templateCreate', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/navbar/navbar.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loginService\n                    \n                \n\n                \n                    \n                        getloginService()\n                    \n                \n                            \n                                \n                                    Defined in src/app/product-list/navbar/navbar.component.ts:23\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        productListService\n                    \n                \n\n                \n                    \n                        getproductListService()\n                    \n                \n                            \n                                \n                                    Defined in src/app/product-list/navbar/navbar.component.ts:27\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { LoginService } from '../../authentication/login/login.service';\nimport { ProductListService } from '../product-list.service';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  private isLogged: boolean | undefined;\n  public productTypes: string[] = [];\n\n  @ViewChild('templateCreate', { static: true }) templateCreate!: TemplateRef;\n\n  constructor(\n    private _loginService: LoginService,\n    private _productListService: ProductListService,\n    private dialog: MatDialog\n  ) {}\n\n  get loginService(): LoginService {\n    return this._loginService;\n  }\n\n  get productListService(): ProductListService {\n    return this._productListService;\n  }\n\n  ngOnInit(): void {\n    this.isLogged = this._loginService.isLoggedIn;\n    if (this.isLogged) {\n      this.productListService.getProductTypes().subscribe(data => {\n        this.productTypes = data;\n      });\n    }\n  }\n\n  /**\n   * Permet d'ouvrir une fenêtre de dialogue vers le formulaire de création d'un nouveau produit\n   */\n  createProductPopup() {\n    this.dialog.open(this.templateCreate);\n  }\n}\n\n    \n\n    \n        \n\n  \n\n\n  \n    \n      \n    \n    \n      \n        \n          add\n        \n        \n          \n            logoutdirections_run\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              add                                      logoutdirections_run                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProductPopupComponent', 'selector': 'app-create-product-popup'},{'name': 'EditProductPopupComponent', 'selector': 'app-edit-product-popup'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProductListComponent', 'selector': 'app-product-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/product-list/product.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            libelle\n                                        \n                                \n                                \n                                        \n                                            quantite\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        libelle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        libelle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantite:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Product {\n  id: string;\n  libelle: string;\n  description: string;\n  image: string;\n  type: string;\n  quantite: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductListComponent.html":{"url":"components/ProductListComponent.html","title":"component - ProductListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/product-list/product-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-list\n            \n\n            \n                styleUrls\n                ./product-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./product-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                filterForm\n                            \n                            \n                                imageSrc\n                            \n                            \n                                products\n                            \n                            \n                                productTypes\n                            \n                            \n                                selectedProduct\n                            \n                            \n                                templateEdit\n                            \n                            \n                                templateShowImg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProduct\n                            \n                            \n                                deleteProductConfirm\n                            \n                            \n                                editProductPopup\n                            \n                            \n                                getProducts\n                            \n                            \n                                getProductTypes\n                            \n                            \n                                getSelectedProduct\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openImage\n                            \n                            \n                                resetFilters\n                            \n                            \n                                setFilters\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    matPaginator\n                                \n                                \n                                    service\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_service: ProductListService, dialog: MatDialog, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/product-list/product-list.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _service\n                                                  \n                                                        \n                                                                        ProductListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/product-list.component.ts:163\n                \n            \n\n\n            \n                \n                    Méthode qui supprime le produit selectionné et qui affiche une alert box pour confirmer la suppression\nSee ProductListService.deleteProduct\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProductConfirm\n                        \n                    \n                \n            \n            \n                \ndeleteProductConfirm(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/product-list.component.ts:94\n                \n            \n\n\n            \n                \n                    Récupère le produit selectionné et ouvre une fenêtre de confirmation pour supprimer le produit\nselectionné. En cas de confirmation, le produit est directement supprimé de la base de données.\nSee deleteProduct\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id du produit à supprimer\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editProductPopup\n                        \n                    \n                \n            \n            \n                \neditProductPopup(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/product-list.component.ts:83\n                \n            \n\n\n            \n                \n                    Récupère le produit selectionné et ouvre la fenêtre de modification d'un produit\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id du produit à modifier\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/product-list.component.ts:142\n                \n            \n\n\n            \n                \n                    Méthode qui initialise la liste de produits et la datasource du tableau de produits\nSee ProductListService.getProduct\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductTypes\n                        \n                    \n                \n            \n            \n                \ngetProductTypes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/product-list.component.ts:134\n                \n            \n\n\n            \n                \n                    Méthode qui initialise la liste des types de produit\nSee ProductListService.getProductTypes\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedProduct\n                        \n                    \n                \n            \n            \n                \ngetSelectedProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/product-list.component.ts:153\n                \n            \n\n\n            \n                \n                    Méthode qui change le produit selectionné (contenu dans la variable selectedProduct)\nSee ProductListService.getProductById\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/product-list.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openImage\n                        \n                    \n                \n            \n            \n                \nopenImage(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/product-list.component.ts:69\n                \n            \n\n\n            \n                \n                    Récupère l'image via son nom dans la base de données pour l'afficher dans une fenêtre de dialogue\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nom de l'image à afficher\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFilters\n                        \n                    \n                \n            \n            \n                \nresetFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/product-list.component.ts:123\n                \n            \n\n\n            \n                \n                    Met à zéro le formulaire et affiche tous les produits de la base de données*\nSee ProductListService.getProducts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilters\n                        \n                    \n                \n            \n            \n                \nsetFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/product-list.component.ts:109\n                \n            \n\n\n            \n                \n                    Récupère les champs du formulaire de filtre et met à jour la liste de produits avec le résultat\nde la recherche.\nSee ProductListService.getProducts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTableDataSource()\n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/product-list.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'numero',\n    'image',\n    'libelle',\n    'description',\n    'type',\n    'quantite',\n    'actions',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/product-list.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    search: '',\n    type: '',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/product-list.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageSrc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/product-list.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/product-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/product-list.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedProduct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/product-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        templateEdit\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('templateEdit', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/product-list.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        templateShowImg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('templateShowImg', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/product-list.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        matPaginator\n                    \n                \n\n\n                \n                    \n                        setmatPaginator(paginator: MatPaginator)\n                    \n                \n                            \n                                \n                                    Defined in src/app/product-list/product-list.component.ts:35\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            paginator\n                                                    \n                                                            \n                                                                        MatPaginator\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/product-list/product-list.component.ts:57\n                                \n                            \n\n                \n                    \n                        setservice(value: ProductListService)\n                    \n                \n                            \n                                \n                                    Defined in src/app/product-list/product-list.component.ts:61\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            ProductListService\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Product } from './product';\nimport { ProductListService } from './product-list.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css'],\n})\n\nexport class ProductListComponent implements OnInit {\n\n  products: Product[] = [];\n  productTypes: string[] = [];\n  selectedProduct!: Product;\n\n  @ViewChild('templateEdit', { static: true }) templateEdit: TemplateRef;\n  @ViewChild('templateShowImg', { static: true }) templateShowImg: TemplateRef;\n\n  displayedColumns: string[] = [\n    'numero',\n    'image',\n    'libelle',\n    'description',\n    'type',\n    'quantite',\n    'actions',\n  ];\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatPaginator, { static: true }) set matPaginator(paginator: MatPaginator) {\n    this.dataSource.paginator = paginator;\n  }\n\n  imageSrc: any;\n\n  filterForm = this.formBuilder.group({\n    search: '',\n    type: '',\n  });\n\n  constructor(\n    private _service: ProductListService,\n    private dialog: MatDialog,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.getProducts();\n    this.getProductTypes();\n  }\n\n  get service(): ProductListService {\n    return this._service;\n  }\n\n  set service(value: ProductListService) {\n    this._service = value;\n  }\n\n  /**\n   * Récupère l'image via son nom dans la base de données pour l'afficher dans une fenêtre de dialogue\n   * @param name Nom de l'image à afficher\n   */\n  openImage(name: string) {\n    this._service.getImage(name).subscribe(img => {\n      const reader = new FileReader();\n      reader.onload = e => (this.imageSrc = reader.result);\n\n      reader.readAsDataURL(img);\n      this.dialog.open(this.templateShowImg);\n    });\n  }\n\n  /**\n   * Récupère le produit selectionné et ouvre la fenêtre de modification d'un produit\n   * @param id Id du produit à modifier\n   */\n  editProductPopup(id: string): void {\n    this.getSelectedProduct(id);\n    setTimeout(() => this.dialog.open(this.templateEdit), 750);\n  }\n\n  /**\n   * Récupère le produit selectionné et ouvre une fenêtre de confirmation pour supprimer le produit\n   * selectionné. En cas de confirmation, le produit est directement supprimé de la base de données.\n   * @param id Id du produit à supprimer\n   * @see deleteProduct\n   */\n  deleteProductConfirm(id: string): void {\n    this.getSelectedProduct(id);\n    setTimeout(() => {\n      if (confirm('Êtes-vous sûr de vouloir supprimer ' + this.selectedProduct.libelle + ' ?')) {\n        this.deleteProduct(id);\n        alert(this.selectedProduct.libelle + ' a correctement été supprimé');\n      }\n    }, 750);\n  }\n\n  /**\n   * Récupère les champs du formulaire de filtre et met à jour la liste de produits avec le résultat\n   * de la recherche.\n   * @see ProductListService.getProducts\n   */\n  setFilters() {\n    this._service\n      // @ts-ignore\n      .getProducts(this.filterForm.get('search').value, this.filterForm.get('type').value)\n      .subscribe(data => {\n        this.products = data;\n        this.dataSource.data = this.products;\n      });\n  }\n\n  /**\n   * Met à zéro le formulaire et affiche tous les produits de la base de données*\n   * @see ProductListService.getProducts\n   */\n  resetFilters() {\n    this.filterForm.reset();\n    this._service.getProducts().subscribe(data => {\n      this.products = data;\n    });\n  }\n\n  /**\n   * Méthode qui initialise la liste des types de produit\n   * @see ProductListService.getProductTypes\n   */\n  getProductTypes() {\n    this._service.getProductTypes().subscribe((data: string[]) => (this.productTypes = data));\n  }\n\n  /**\n   * Méthode qui initialise la liste de produits et la datasource du tableau de produits\n   * @see ProductListService.getProduct\n   */\n  getProducts() {\n    this._service.getProducts().subscribe((data: Product[]) => {\n      this.products = data;\n      this.dataSource.data = this.products;\n    });\n  }\n\n  /**\n   * Méthode qui change le produit selectionné (contenu dans la variable selectedProduct)\n   * @see ProductListService.getProductById\n   */\n  getSelectedProduct(id: string) {\n    this._service.getProductById(id).subscribe((data: Product) => {\n      this.selectedProduct = data;\n    });\n  }\n\n  /**\n   * Méthode qui supprime le produit selectionné et qui affiche une alert box pour confirmer la suppression\n   * @see ProductListService.deleteProduct\n   */\n  deleteProduct(id: string) {\n    this._service.deleteProduct(id).subscribe(() => {\n      // TODO : message confirmation suppression + refresh\n      alert('Le produit a correctement été supprimé du catalogue');\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n\n\n\n  \n  \n    \n  \n\n\n\n  \n    \n       No. \n       {{ i + 1 }} \n    \n\n    \n       Image \n      \n        \n          collections\n        \n      \n    \n\n    \n       Nom \n       {{ product.libelle }} \n    \n\n    \n       Description \n      \n        {{ product.description.substring(0, 57) + '...' }}\n      \n    \n\n    \n       Type \n       {{ product.type }} \n    \n\n    \n       Quantité \n       {{ product.quantite }} \n    \n\n    \n       Actions \n      \n        \n          edit\n        \n        \n          delete\n        \n      \n    \n\n    \n    \n  \n   \n\n\n\n  \n    filter_list\n  \n  \n    \n      \n        Recherchez\n        \n        search\n        Marque, caractéristique...\n      \n      Par type de produit :\n      \n        \n        \n          {{ type }}\n        \n      \n      \n      \n        \n          \n            Filtrer\n          \n          \n            \n              Réinitialiser\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./product-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                         No.        {{ i + 1 }}                Image                         collections                             Nom        {{ product.libelle }}                Description               {{ product.description.substring(0, 57) + \\'...\\' }}                     Type        {{ product.type }}                Quantité        {{ product.quantite }}                Actions                         edit                          delete                                     filter_list                      Recherchez                search        Marque, caractéristique...            Par type de produit :                                {{ type }}                                                        Filtrer                                              Réinitialiser                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProductPopupComponent', 'selector': 'app-create-product-popup'},{'name': 'EditProductPopupComponent', 'selector': 'app-edit-product-popup'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProductListComponent', 'selector': 'app-product-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductListModule.html":{"url":"modules/ProductListModule.html","title":"module - ProductListModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductListModule\n\n\n\ncluster_ProductListModule_providers\n\n\n\ncluster_ProductListModule_imports\n\n\n\ncluster_ProductListModule_exports\n\n\n\ncluster_ProductListModule_declarations\n\n\n\n\nCreateProductPopupComponent\n\nCreateProductPopupComponent\n\n\n\nProductListModule\n\nProductListModule\n\nProductListModule -->\n\nCreateProductPopupComponent->ProductListModule\n\n\n\n\n\nEditProductPopupComponent\n\nEditProductPopupComponent\n\nProductListModule -->\n\nEditProductPopupComponent->ProductListModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nProductListModule -->\n\nNavbarComponent->ProductListModule\n\n\n\n\n\nProductListComponent\n\nProductListComponent\n\nProductListModule -->\n\nProductListComponent->ProductListModule\n\n\n\n\n\nCreateProductPopupComponent \n\nCreateProductPopupComponent \n\nCreateProductPopupComponent  -->\n\nProductListModule->CreateProductPopupComponent \n\n\n\n\n\nEditProductPopupComponent \n\nEditProductPopupComponent \n\nEditProductPopupComponent  -->\n\nProductListModule->EditProductPopupComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nProductListModule->NavbarComponent \n\n\n\n\n\nProductListComponent \n\nProductListComponent \n\nProductListComponent  -->\n\nProductListModule->ProductListComponent \n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nProductListModule -->\n\nAuthenticationModule->ProductListModule\n\n\n\n\n\nProductListService\n\nProductListService\n\nProductListModule -->\n\nProductListService->ProductListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/product-list/product-list.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CreateProductPopupComponent\n                        \n                        \n                            EditProductPopupComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            ProductListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ProductListService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthenticationModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CreateProductPopupComponent\n                        \n                        \n                            EditProductPopupComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            ProductListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\n\nimport { AuthenticationModule } from '../authentication/authentication.module';\n\nimport { ProductListComponent } from './product-list.component';\nimport { EditProductPopupComponent } from './edit-product-popup/edit-product-popup.component';\nimport { CreateProductPopupComponent } from './create-product-popup/create-product-popup.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n\nimport { ProductListService } from './product-list.service';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    ProductListComponent,\n    EditProductPopupComponent,\n    CreateProductPopupComponent,\n    NavbarComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgbModule,\n    AuthenticationModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatButtonModule,\n  ],\n  exports: [\n    ProductListComponent,\n    EditProductPopupComponent,\n    CreateProductPopupComponent,\n    NavbarComponent,\n  ],\n  providers: [ProductListService],\n})\nexport class ProductListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductListService.html":{"url":"injectables/ProductListService.html","title":"injectable - ProductListService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/product-list/product-list.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                URL_API\n                            \n                            \n                                    Private\n                                URL_IMG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProduct\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                editProduct\n                            \n                            \n                                getImage\n                            \n                            \n                                getProductById\n                            \n                            \n                                getProducts\n                            \n                            \n                                getProductTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/product-list/product-list.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createProduct\n                        \n                    \n                \n            \n            \n                \ncreateProduct(body: URLSearchParams, options: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/product-list.service.ts:61\n                \n            \n\n\n            \n                \n                    Retourne le résultat d'une requête HTTP POST vers l'API afin de créer un nouveau produit dans la base de données.\nLe résultat contient l'objet modifié avec ses nouvelles valeurs\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                            URLSearchParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Les données à transmettre à la requête\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Les options de la requêtes\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/product-list.service.ts:80\n                \n            \n\n\n            \n                \n                    Envoie une requête HTTP DELETE vers l'API afin de supprimer un produit de la base de données.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id du produit à supprimer\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editProduct\n                        \n                    \n                \n            \n            \n                \neditProduct(id: string, body: URLSearchParams, options: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/product-list.service.ts:72\n                \n            \n\n\n            \n                \n                    Retourne le résultat d'une requête HTTP PATCH vers l'API afin de modifier un produit existant. Le résultat contient\nl'objet modifié avec ses nouvelles valeurs\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id du produit à modifier\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                            URLSearchParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Les données à transmettre à la requête\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Les options de la requêtes\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getImage\n                        \n                    \n                \n            \n            \n                \ngetImage(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/product-list.service.ts:88\n                \n            \n\n\n            \n                \n                    Evnoie une requête HTTP GET vers l'API afin d'en récupérer une image de type blob.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nom de l'image à récupérer\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductById\n                        \n                    \n                \n            \n            \n                \ngetProductById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/product-list.service.ts:27\n                \n            \n\n\n            \n                \n                    Retourne le résultat d'une requête HTTP GET vers l'API afin de récupérer un produit par ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id du produit à récupérer\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts(search?: string, type?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/product-list.service.ts:38\n                \n            \n\n\n            \n                \n                    Retourne le résultat d'une requête HTTP GET vers l'API afjn de récupérer une liste de produit. S'il n'y a\npas de paramètres, alors la fonction retourne tous les produits de la base de données. Sinon, la requête\nprend en compte les paramètres afin de filtrer la recherche.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    search\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Occurence à rechercher dans le libellé ou la description du produit\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Type de produit recherché\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductTypes\n                        \n                    \n                \n            \n            \n                \ngetProductTypes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/product-list/product-list.service.ts:19\n                \n            \n\n\n            \n                \n                    Retourne le résultat d'une requête HTTP GET vers l'API afin de récupérer la liste des types de produits\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        URL_API\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://crud-products-nodejs-nidal.herokuapp.com/products/'\n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/product-list.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        URL_IMG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://crud-products-nodejs-nidal.herokuapp.com/products/img/'\n                    \n                \n                    \n                        \n                                Defined in src/app/product-list/product-list.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Product } from './product';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductListService {\n\n  private URL_API = 'https://crud-products-nodejs-nidal.herokuapp.com/products/';\n  private URL_IMG = 'https://crud-products-nodejs-nidal.herokuapp.com/products/img/';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Retourne le résultat d'une requête HTTP GET vers l'API afin de récupérer la liste des types de produits\n   */\n  getProductTypes(): Observable {\n    return this.http.get(this.URL_API + 'types');\n  }\n\n  /**\n   * Retourne le résultat d'une requête HTTP GET vers l'API afin de récupérer un produit par ID\n   * @param id Id du produit à récupérer\n   */\n  getProductById(id: string): Observable {\n    return this.http.get(this.URL_API + id);\n  }\n\n  /**\n   * Retourne le résultat d'une requête HTTP GET vers l'API afjn de récupérer une liste de produit. S'il n'y a\n   * pas de paramètres, alors la fonction retourne tous les produits de la base de données. Sinon, la requête\n   * prend en compte les paramètres afin de filtrer la recherche.\n   * @param search Occurence à rechercher dans le libellé ou la description du produit\n   * @param type Type de produit recherché\n   */\n  getProducts(search?: string, type?: string): Observable {\n    let url = this.URL_API;\n\n    if (type && search) {\n      url += '?type=' + type + '&search=' + search;\n      return this.http.get(url);\n    } else if (type && !search) {\n      url += '?type=' + type;\n      return this.http.get(url);\n    } else if (!type && search) {\n      url += '?search=' + search;\n      return this.http.get(url);\n    } else {\n      return this.http.get(this.URL_API);\n    }\n  }\n\n  /**\n   * Retourne le résultat d'une requête HTTP POST vers l'API afin de créer un nouveau produit dans la base de données.\n   * Le résultat contient l'objet modifié avec ses nouvelles valeurs\n   * @param body Les données à transmettre à la requête\n   * @param options Les options de la requêtes\n   */\n  createProduct(body: URLSearchParams, options: Object): Observable {\n    return this.http.post(this.URL_API, body.toString(), options);\n  }\n\n  /**\n   * Retourne le résultat d'une requête HTTP PATCH vers l'API afin de modifier un produit existant. Le résultat contient\n   * l'objet modifié avec ses nouvelles valeurs\n   * @param id Id du produit à modifier\n   * @param body Les données à transmettre à la requête\n   * @param options Les options de la requêtes\n   */\n  editProduct(id: string, body: URLSearchParams, options: Object): Observable {\n    return this.http.patch(this.URL_API + id, body.toString(), options);\n  }\n\n  /**\n   * Envoie une requête HTTP DELETE vers l'API afin de supprimer un produit de la base de données.\n   * @param id Id du produit à supprimer\n   */\n  deleteProduct(id: string): Observable {\n    return this.http.delete(this.URL_API + id);\n  }\n\n  /**\n   * Evnoie une requête HTTP GET vers l'API afin d'en récupérer une image de type blob.\n   * @param name Nom de l'image à récupérer\n   */\n  getImage(name: string) {\n    return this.http.get(this.URL_IMG + name, { responseType: 'blob' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/token-interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Cette classe est un intercepteur qui permet de passer automatiquement le token du client à la requête avant de\nl'envoyer à l'API\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/token-interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/token-interceptor.ts:20\n                \n            \n\n\n            \n                \n                    Cette méthode permet d'intercepter chaque requête HTTP effectuée par le service HttpClient afin d'en\nmodifier l'entête et d'y passer l'access_token récupéré via le Local Storage du client\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/token-interceptor.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { LoginService } from './authentication/login/login.service';\nimport { Observable } from 'rxjs';\n\n/**\n * Cette classe est un intercepteur qui permet de passer automatiquement le token du client à la requête avant de\n * l'envoyer à l'API\n */\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(public auth: LoginService) {}\n\n  /**\n   * Cette méthode permet d'intercepter chaque requête HTTP effectuée par le service HttpClient afin d'en\n   * modifier l'entête et d'y passer l'access_token récupéré via le Local Storage du client\n   */\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    request = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.auth.getToken()}`,\n      },\n    });\n\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authentication/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/user.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/user.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/user.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id!: string;\n  username!: string;\n  password!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/authentication/auth-guard.service.ts\n            \n            guard\n            AuthGuardService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/authentication/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                27 %\n                (3/11)\n            \n        \n        \n            \n                \n                src/app/authentication/login/login.service.ts\n            \n            injectable\n            LoginService\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/authentication/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/file-handler.ts\n            \n            class\n            FileHandler\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/product-list/create-product-popup/create-product-popup.component.ts\n            \n            component\n            CreateProductPopupComponent\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/product-list/edit-product-popup/edit-product-popup.component.ts\n            \n            component\n            EditProductPopupComponent\n            \n                23 %\n                (3/13)\n            \n        \n        \n            \n                \n                src/app/product-list/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/product-list/product-list.component.ts\n            \n            component\n            ProductListComponent\n            \n                42 %\n                (9/21)\n            \n        \n        \n            \n                \n                src/app/product-list/product-list.service.ts\n            \n            injectable\n            ProductListService\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/product-list/product.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/token-interceptor.ts\n            \n            interceptor\n            TokenInterceptor\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.3.0\n        \n            @angular/common : ~13.3.0\n        \n            @angular/compiler : ~13.3.0\n        \n            @angular/core : ~13.3.0\n        \n            @angular/forms : ~13.3.0\n        \n            @angular/material : ^13.3.7\n        \n            @angular/platform-browser : ~13.3.0\n        \n            @angular/platform-browser-dynamic : ~13.3.0\n        \n            @angular/router : ~13.3.0\n        \n            @fortawesome/angular-fontawesome : ^0.10.2\n        \n            @fortawesome/fontawesome-svg-core : ^6.1.1\n        \n            @fortawesome/free-solid-svg-icons : ^6.1.1\n        \n            @ng-bootstrap/ng-bootstrap : ^12.1.2\n        \n            bootstrap : ^5.1.3\n        \n            express : ^4.18.1\n        \n            jquery : ^3.6.0\n        \n            path : ^0.12.7\n        \n            rxjs : ~7.5.0\n        \n            save-dev : ^0.0.1-security\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend\nThis project was generated with Angular CLI version 13.3.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\ncluster_ProductListModule\n\n\n\ncluster_ProductListModule_declarations\n\n\n\ncluster_ProductListModule_exports\n\n\n\ncluster_ProductListModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nProductListModule\n\nProductListModule\n\nProductListModule -->\n\nAuthenticationModule->ProductListModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthenticationModule->LoginComponent \n\n\n\nAppModule -->\n\nProductListModule->AppModule\n\n\n\n\n\nCreateProductPopupComponent \n\nCreateProductPopupComponent \n\nCreateProductPopupComponent  -->\n\nProductListModule->CreateProductPopupComponent \n\n\n\n\n\nEditProductPopupComponent \n\nEditProductPopupComponent \n\nEditProductPopupComponent  -->\n\nProductListModule->EditProductPopupComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nProductListModule->NavbarComponent \n\n\n\n\n\nProductListComponent \n\nProductListComponent \n\nProductListComponent  -->\n\nProductListModule->ProductListComponent \n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthenticationModule -->\n\nLoginComponent->AuthenticationModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nAuthenticationModule -->\n\nLoginService->AuthenticationModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAuthenticationModule -->\n\nTokenInterceptor->AuthenticationModule\n\n\n\n\n\nCreateProductPopupComponent\n\nCreateProductPopupComponent\n\nProductListModule -->\n\nCreateProductPopupComponent->ProductListModule\n\n\n\n\n\nEditProductPopupComponent\n\nEditProductPopupComponent\n\nProductListModule -->\n\nEditProductPopupComponent->ProductListModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nProductListModule -->\n\nNavbarComponent->ProductListModule\n\n\n\n\n\nProductListComponent\n\nProductListComponent\n\nProductListModule -->\n\nProductListComponent->ProductListModule\n\n\n\n\n\nProductListService\n\nProductListService\n\nProductListModule -->\n\nProductListService->ProductListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
